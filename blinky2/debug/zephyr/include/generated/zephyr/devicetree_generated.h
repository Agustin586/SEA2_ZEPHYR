/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   D:/aguat/Documents/GitHub/Zephyr-SEA2/blinky2/debug/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@1FFFF000
 *   4   /soc
 *   5   /pinctrl
 *   6   /pinctrl/pinmux_adc0
 *   7   /soc/interrupt-controller@e000e100
 *   8   /soc/adc@4003b000
 *   9   /temp0
 *   10  /clocks
 *   11  /clocks/osc
 *   12  /cpus
 *   13  /cpus/cpu@0
 *   14  /soc/sim@40047000
 *   15  /soc/pinmux@40049000
 *   16  /soc/gpio@400ff000
 *   17  /soc/pinmux@4004b000
 *   18  /soc/gpio@400ff080
 *   19  /gpio_keys
 *   20  /gpio_keys/button_2
 *   21  /gpio_keys/button_3
 *   22  /soc/pinmux@4004c000
 *   23  /soc/gpio@400ff0c0
 *   24  /soc/pinmux@4004d000
 *   25  /soc/gpio@400ff100
 *   26  /leds
 *   27  /leds/led_0
 *   28  /leds/led_1
 *   29  /leds/led_2
 *   30  /pinctrl/pinmux_adc0/group0
 *   31  /pinctrl/pinmux_i2c0
 *   32  /pinctrl/pinmux_i2c0/group0
 *   33  /pinctrl/pinmux_lpuart0
 *   34  /pinctrl/pinmux_lpuart0/group0
 *   35  /pinctrl/pinmux_tpm0
 *   36  /pinctrl/pinmux_tpm0/group0
 *   37  /pinctrl/pinmux_uart2
 *   38  /pinctrl/pinmux_uart2/group0
 *   39  /soc/pwm@40038000
 *   40  /pwmleds
 *   41  /pwmleds/pwm_led_0
 *   42  /pwmleds/pwm_led_1
 *   43  /pwmleds/pwm_led_2
 *   44  /soc/pinmux@4004a000
 *   45  /soc/gpio@400ff040
 *   46  /soc/i2c@40067000
 *   47  /soc/lptmr@40040000
 *   48  /soc/pwm@40039000
 *   49  /soc/pwm@4003a000
 *   50  /soc/rtc@4003d000
 *   51  /soc/timer@e000e010
 *   52  /soc/uart@40054000
 *   53  /soc/uart@40055000
 *   54  /soc/uart@4006c000
 *   55  /soc/usbd@40072000
 *   56  /soc/flash-controller@40020000
 *   57  /soc/flash-controller@40020000/flash@0
 *   58  /soc/i2c@40066000
 *   59  /soc/i2c@40066000/fxls8974@18
 *   60  /soc/pit@40037000
 *   61  /soc/pit@40037000/pit0_channel@0
 *   62  /soc/pit@40037000/pit0_channel@1
 *   63  /soc/clock-controller@40064000
 *   64  /soc/sim@40047000/core_clk
 *   65  /soc/sim@40047000/flash_clk
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 11
#define DT_N_CHILD_NUM_STATUS_OKAY 9
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_1ffff000) fn(DT_N_S_pinctrl) fn(DT_N_S_clocks) fn(DT_N_S_temp0) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_1ffff000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_temp0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_1ffff000, __VA_ARGS__) fn(DT_N_S_pinctrl, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_temp0, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_1ffff000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_temp0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_1ffff000) fn(DT_N_S_pinctrl) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_1ffff000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_1ffff000, __VA_ARGS__) fn(DT_N_S_pinctrl, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_1ffff000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /memory@1FFFF000 */ \
	4, /* /soc */ \
	5, /* /pinctrl */ \
	9, /* /temp0 */ \
	10, /* /clocks */ \
	12, /* /cpus */ \
	19, /* /gpio_keys */ \
	26, /* /leds */ \
	40, /* /pwmleds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nxp_mcxc444 DT_N
#define DT_N_INST_0_nxp_mcx     DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_nxp_mcxc444 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "mcxc444"
#define DT_N_COMPAT_MATCHES_nxp_mcx 1
#define DT_N_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_1 "NXP Semiconductors"
#define DT_N_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_1 "mcx"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nxp,mcxc444", "nxp,mcx"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "nxp,mcxc444"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcxc444
#define DT_N_P_compatible_IDX_0_STRING_TOKEN nxp_mcxc444
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCXC444
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_IDX_1 "nxp,mcx"
#define DT_N_P_compatible_IDX_1_STRING_UNQUOTED nxp,mcx
#define DT_N_P_compatible_IDX_1_STRING_TOKEN nxp_mcx
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN NXP_MCX
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_LEN 2
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /memory@1FFFF000
 *
 * Node identifier: DT_N_S_memory_1ffff000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_1ffff000_PATH "/memory@1FFFF000"

/* Node's name with unit-address: */
#define DT_N_S_memory_1ffff000_FULL_NAME "memory@1FFFF000"
#define DT_N_S_memory_1ffff000_FULL_NAME_UNQUOTED memory@1FFFF000
#define DT_N_S_memory_1ffff000_FULL_NAME_TOKEN memory_1FFFF000
#define DT_N_S_memory_1ffff000_FULL_NAME_UPPER_TOKEN MEMORY_1FFFF000

/* Node parent (/) identifier: */
#define DT_N_S_memory_1ffff000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_1ffff000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_1ffff000_NODELABEL_NUM 1
#define DT_N_S_memory_1ffff000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_1ffff000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_memory_1ffff000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_1ffff000_CHILD_NUM 0
#define DT_N_S_memory_1ffff000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_1ffff000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_1ffff000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_1ffff000_HASH lr5PCRmrIBEx1Z7W4XNcd4sx_Gpd04pm6v5iyys0_GE

/* Node's dependency ordinal: */
#define DT_N_S_memory_1ffff000_ORD 3
#define DT_N_S_memory_1ffff000_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_1ffff000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_1ffff000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_1ffff000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_1ffff000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_1ffff000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_1ffff000_REG_NUM 1
#define DT_N_S_memory_1ffff000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_1ffff000_REG_IDX_0_VAL_ADDRESS 536862720 /* 0x1fffe000 */
#define DT_N_S_memory_1ffff000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory_1ffff000_RANGES_NUM 0
#define DT_N_S_memory_1ffff000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_1ffff000_IRQ_NUM 0
#define DT_N_S_memory_1ffff000_IRQ_LEVEL 0
#define DT_N_S_memory_1ffff000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_1ffff000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_1ffff000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_1ffff000_P_reg {536862720 /* 0x1fffe000 */, 32768 /* 0x8000 */}
#define DT_N_S_memory_1ffff000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_1ffff000_P_reg_IDX_0 536862720
#define DT_N_S_memory_1ffff000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_1ffff000_P_reg_IDX_1 32768
#define DT_N_S_memory_1ffff000_P_reg_EXISTS 1
#define DT_N_S_memory_1ffff000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_1ffff000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_1ffff000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_1ffff000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_1ffff000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_1ffff000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_1ffff000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_1ffff000, compatible, 0)
#define DT_N_S_memory_1ffff000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_1ffff000, compatible, 0)
#define DT_N_S_memory_1ffff000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_1ffff000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_1ffff000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_1ffff000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_1ffff000_P_compatible_LEN 1
#define DT_N_S_memory_1ffff000_P_compatible_EXISTS 1
#define DT_N_S_memory_1ffff000_P_zephyr_deferred_init 0
#define DT_N_S_memory_1ffff000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_1ffff000_P_wakeup_source 0
#define DT_N_S_memory_1ffff000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_1ffff000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_1ffff000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 28
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 22
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40020000) fn(DT_N_S_soc_S_clock_controller_40064000) fn(DT_N_S_soc_S_sim_40047000) fn(DT_N_S_soc_S_pinmux_40049000) fn(DT_N_S_soc_S_pinmux_4004a000) fn(DT_N_S_soc_S_pinmux_4004b000) fn(DT_N_S_soc_S_pinmux_4004c000) fn(DT_N_S_soc_S_pinmux_4004d000) fn(DT_N_S_soc_S_gpio_400ff000) fn(DT_N_S_soc_S_gpio_400ff040) fn(DT_N_S_soc_S_gpio_400ff080) fn(DT_N_S_soc_S_gpio_400ff0c0) fn(DT_N_S_soc_S_gpio_400ff100) fn(DT_N_S_soc_S_adc_4003b000) fn(DT_N_S_soc_S_i2c_40066000) fn(DT_N_S_soc_S_i2c_40067000) fn(DT_N_S_soc_S_usbd_40072000) fn(DT_N_S_soc_S_uart_40054000) fn(DT_N_S_soc_S_uart_40055000) fn(DT_N_S_soc_S_uart_4006c000) fn(DT_N_S_soc_S_pwm_40038000) fn(DT_N_S_soc_S_pwm_40039000) fn(DT_N_S_soc_S_pwm_4003a000) fn(DT_N_S_soc_S_lptmr_40040000) fn(DT_N_S_soc_S_rtc_4003d000) fn(DT_N_S_soc_S_pit_40037000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40064000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_40049000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff0c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4003b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40066000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40067000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40072000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40054000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40055000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4006c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40038000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40039000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4003a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lptmr_40040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4003d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40067000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40055000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4006c000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40039000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4003a000, __VA_ARGS__) fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40067000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40055000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4006c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40039000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4003a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_clock_controller_40064000) fn(DT_N_S_soc_S_sim_40047000) fn(DT_N_S_soc_S_pinmux_40049000) fn(DT_N_S_soc_S_pinmux_4004a000) fn(DT_N_S_soc_S_pinmux_4004b000) fn(DT_N_S_soc_S_pinmux_4004c000) fn(DT_N_S_soc_S_pinmux_4004d000) fn(DT_N_S_soc_S_gpio_400ff000) fn(DT_N_S_soc_S_gpio_400ff040) fn(DT_N_S_soc_S_gpio_400ff080) fn(DT_N_S_soc_S_gpio_400ff0c0) fn(DT_N_S_soc_S_gpio_400ff100) fn(DT_N_S_soc_S_adc_4003b000) fn(DT_N_S_soc_S_i2c_40066000) fn(DT_N_S_soc_S_usbd_40072000) fn(DT_N_S_soc_S_uart_40054000) fn(DT_N_S_soc_S_pwm_40038000) fn(DT_N_S_soc_S_lptmr_40040000) fn(DT_N_S_soc_S_rtc_4003d000) fn(DT_N_S_soc_S_pit_40037000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40064000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_40049000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff0c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4003b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40066000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40072000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40054000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40038000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lptmr_40040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4003d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__) fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/adc@4003b000 */ \
	14, /* /soc/sim@40047000 */ \
	15, /* /soc/pinmux@40049000 */ \
	16, /* /soc/gpio@400ff000 */ \
	17, /* /soc/pinmux@4004b000 */ \
	18, /* /soc/gpio@400ff080 */ \
	22, /* /soc/pinmux@4004c000 */ \
	23, /* /soc/gpio@400ff0c0 */ \
	24, /* /soc/pinmux@4004d000 */ \
	25, /* /soc/gpio@400ff100 */ \
	39, /* /soc/pwm@40038000 */ \
	44, /* /soc/pinmux@4004a000 */ \
	45, /* /soc/gpio@400ff040 */ \
	46, /* /soc/i2c@40067000 */ \
	47, /* /soc/lptmr@40040000 */ \
	48, /* /soc/pwm@40039000 */ \
	49, /* /soc/pwm@4003a000 */ \
	50, /* /soc/rtc@4003d000 */ \
	51, /* /soc/timer@e000e010 */ \
	52, /* /soc/uart@40054000 */ \
	53, /* /soc/uart@40055000 */ \
	54, /* /soc/uart@4006c000 */ \
	55, /* /soc/usbd@40072000 */ \
	56, /* /soc/flash-controller@40020000 */ \
	58, /* /soc/i2c@40066000 */ \
	60, /* /soc/pit@40037000 */ \
	63, /* /soc/clock-controller@40064000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /pinctrl
 *
 * Node identifier: DT_N_S_pinctrl
 *
 * Binding (compatible = nxp,port-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nxp,port-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_PATH "/pinctrl"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_FULL_NAME "pinctrl"
#define DT_N_S_pinctrl_FULL_NAME_UNQUOTED pinctrl
#define DT_N_S_pinctrl_FULL_NAME_TOKEN pinctrl
#define DT_N_S_pinctrl_FULL_NAME_UPPER_TOKEN PINCTRL

/* Node parent (/) identifier: */
#define DT_N_S_pinctrl_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_NODELABEL_NUM 1
#define DT_N_S_pinctrl_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pinctrl_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_pinctrl_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_CHILD_NUM 5
#define DT_N_S_pinctrl_CHILD_NUM_STATUS_OKAY 5
#define DT_N_S_pinctrl_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0) fn(DT_N_S_pinctrl_S_pinmux_i2c0) fn(DT_N_S_pinctrl_S_pinmux_lpuart0) fn(DT_N_S_pinctrl_S_pinmux_uart2) fn(DT_N_S_pinctrl_S_pinmux_tpm0)
#define DT_N_S_pinctrl_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_i2c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_lpuart0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_uart2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_tpm0)
#define DT_N_S_pinctrl_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_i2c0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_lpuart0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_uart2, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_tpm0, __VA_ARGS__)
#define DT_N_S_pinctrl_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_i2c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_lpuart0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_uart2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_tpm0, __VA_ARGS__)
#define DT_N_S_pinctrl_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0) fn(DT_N_S_pinctrl_S_pinmux_i2c0) fn(DT_N_S_pinctrl_S_pinmux_lpuart0) fn(DT_N_S_pinctrl_S_pinmux_uart2) fn(DT_N_S_pinctrl_S_pinmux_tpm0)
#define DT_N_S_pinctrl_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_i2c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_lpuart0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_uart2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_tpm0)
#define DT_N_S_pinctrl_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_i2c0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_lpuart0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_uart2, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_tpm0, __VA_ARGS__)
#define DT_N_S_pinctrl_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_i2c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_lpuart0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_uart2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_S_pinmux_tpm0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_HASH 01QuO_7SrEK_FK3pBqPkBim8omttEGOeu46fT9NfDAg

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_ORD 5
#define DT_N_S_pinctrl_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_SUPPORTS_ORDS \
	6, /* /pinctrl/pinmux_adc0 */ \
	31, /* /pinctrl/pinmux_i2c0 */ \
	33, /* /pinctrl/pinmux_lpuart0 */ \
	35, /* /pinctrl/pinmux_tpm0 */ \
	37, /* /pinctrl/pinmux_uart2 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_EXISTS 1
#define DT_N_INST_0_nxp_port_pinctrl DT_N_S_pinctrl
#define DT_N_NODELABEL_pinctrl       DT_N_S_pinctrl

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_REG_NUM 0
#define DT_N_S_pinctrl_RANGES_NUM 0
#define DT_N_S_pinctrl_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_IRQ_NUM 0
#define DT_N_S_pinctrl_IRQ_LEVEL 0
#define DT_N_S_pinctrl_COMPAT_MATCHES_nxp_port_pinctrl 1
#define DT_N_S_pinctrl_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_pinctrl_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_COMPAT_MODEL_IDX_0 "port-pinctrl"
#define DT_N_S_pinctrl_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_P_status "okay"
#define DT_N_S_pinctrl_P_status_STRING_UNQUOTED okay
#define DT_N_S_pinctrl_P_status_STRING_TOKEN okay
#define DT_N_S_pinctrl_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pinctrl_P_status_IDX_0 "okay"
#define DT_N_S_pinctrl_P_status_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pinctrl_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pinctrl_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl, status, 0)
#define DT_N_S_pinctrl_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl, status, 0)
#define DT_N_S_pinctrl_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_P_status_LEN 1
#define DT_N_S_pinctrl_P_status_EXISTS 1
#define DT_N_S_pinctrl_P_compatible {"nxp,port-pinctrl"}
#define DT_N_S_pinctrl_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_P_compatible_IDX_0 "nxp,port-pinctrl"
#define DT_N_S_pinctrl_P_compatible_IDX_0_STRING_UNQUOTED nxp,port-pinctrl
#define DT_N_S_pinctrl_P_compatible_IDX_0_STRING_TOKEN nxp_port_pinctrl
#define DT_N_S_pinctrl_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PORT_PINCTRL
#define DT_N_S_pinctrl_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl, compatible, 0)
#define DT_N_S_pinctrl_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl, compatible, 0)
#define DT_N_S_pinctrl_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_P_compatible_LEN 1
#define DT_N_S_pinctrl_P_compatible_EXISTS 1
#define DT_N_S_pinctrl_P_zephyr_deferred_init 0
#define DT_N_S_pinctrl_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pinctrl_P_wakeup_source 0
#define DT_N_S_pinctrl_P_wakeup_source_EXISTS 1
#define DT_N_S_pinctrl_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pinctrl_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl/pinmux_adc0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_adc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_adc0_PATH "/pinctrl/pinmux_adc0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_adc0_FULL_NAME "pinmux_adc0"
#define DT_N_S_pinctrl_S_pinmux_adc0_FULL_NAME_UNQUOTED pinmux_adc0
#define DT_N_S_pinctrl_S_pinmux_adc0_FULL_NAME_TOKEN pinmux_adc0
#define DT_N_S_pinctrl_S_pinmux_adc0_FULL_NAME_UPPER_TOKEN PINMUX_ADC0

/* Node parent (/pinctrl) identifier: */
#define DT_N_S_pinctrl_S_pinmux_adc0_PARENT DT_N_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_adc0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_adc0_NODELABEL_NUM 1
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_NODELABEL(fn) fn(pinmux_adc0)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_adc0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_adc0_CHILD_NUM 1
#define DT_N_S_pinctrl_S_pinmux_adc0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_adc0_HASH 5LjzwquaFObl_TjF9oT1gnidwImC15b7kaXCEIcKaU4

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_adc0_ORD 6
#define DT_N_S_pinctrl_S_pinmux_adc0_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_adc0_REQUIRES_ORDS \
	5, /* /pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_adc0_SUPPORTS_ORDS \
	8, /* /soc/adc@4003b000 */ \
	30, /* /pinctrl/pinmux_adc0/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_adc0_EXISTS 1
#define DT_N_NODELABEL_pinmux_adc0 DT_N_S_pinctrl_S_pinmux_adc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_adc0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_adc0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_adc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_adc0_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v6m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v6m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 7
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	8, /* /soc/adc@4003b000 */ \
	16, /* /soc/gpio@400ff000 */ \
	18, /* /soc/gpio@400ff080 */ \
	39, /* /soc/pwm@40038000 */ \
	46, /* /soc/i2c@40067000 */ \
	47, /* /soc/lptmr@40040000 */ \
	48, /* /soc/pwm@40039000 */ \
	49, /* /soc/pwm@4003a000 */ \
	50, /* /soc/rtc@4003d000 */ \
	52, /* /soc/uart@40054000 */ \
	53, /* /soc/uart@40055000 */ \
	54, /* /soc/uart@4006c000 */ \
	55, /* /soc/usbd@40072000 */ \
	56, /* /soc/flash-controller@40020000 */ \
	58, /* /soc/i2c@40066000 */ \
	60, /* /soc/pit@40037000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v6m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v6m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 2
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v6m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v6m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v6m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V6M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@4003b000
 *
 * Node identifier: DT_N_S_soc_S_adc_4003b000
 *
 * Binding (compatible = nxp,kinetis-adc16):
 *   $ZEPHYR_BASE\dts\bindings\adc\nxp,kinetis-adc16.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_4003b000_PATH "/soc/adc@4003b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_4003b000_FULL_NAME "adc@4003b000"
#define DT_N_S_soc_S_adc_4003b000_FULL_NAME_UNQUOTED adc@4003b000
#define DT_N_S_soc_S_adc_4003b000_FULL_NAME_TOKEN adc_4003b000
#define DT_N_S_soc_S_adc_4003b000_FULL_NAME_UPPER_TOKEN ADC_4003B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_4003b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_4003b000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_4003b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_4003b000_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_4003b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_4003b000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_4003b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_4003b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_4003b000_HASH z_PKaQup45xr1h6wsmNte0i5Ag8SCmBdDsZ3iABN58s

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_4003b000_ORD 8
#define DT_N_S_soc_S_adc_4003b000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_4003b000_REQUIRES_ORDS \
	4, /* /soc */ \
	6, /* /pinctrl/pinmux_adc0 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_4003b000_SUPPORTS_ORDS \
	9, /* /temp0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_4003b000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_adc16 DT_N_S_soc_S_adc_4003b000
#define DT_N_NODELABEL_adc0           DT_N_S_soc_S_adc_4003b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_4003b000_REG_NUM 1
#define DT_N_S_soc_S_adc_4003b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_REG_IDX_0_VAL_ADDRESS 1073983488 /* 0x4003b000 */
#define DT_N_S_soc_S_adc_4003b000_REG_IDX_0_VAL_SIZE 112 /* 0x70 */
#define DT_N_S_soc_S_adc_4003b000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_4003b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_4003b000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_4003b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_4003b000_COMPAT_MATCHES_nxp_kinetis_adc16 1
#define DT_N_S_soc_S_adc_4003b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_adc_4003b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_COMPAT_MODEL_IDX_0 "kinetis-adc16"
#define DT_N_S_soc_S_adc_4003b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_4003b000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_S_pinmux_adc0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_4003b000_P_reg {1073983488 /* 0x4003b000 */, 112 /* 0x70 */}
#define DT_N_S_soc_S_adc_4003b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_reg_IDX_0 1073983488
#define DT_N_S_soc_S_adc_4003b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_reg_IDX_1 112
#define DT_N_S_soc_S_adc_4003b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_channel_mux_b 0
#define DT_N_S_soc_S_adc_4003b000_P_channel_mux_b_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_4003b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_adc_4003b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_4003b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_periodic_trigger 0
#define DT_N_S_soc_S_adc_4003b000_P_periodic_trigger_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_continuous_convert 0
#define DT_N_S_soc_S_adc_4003b000_P_continuous_convert_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_high_speed 0
#define DT_N_S_soc_S_adc_4003b000_P_high_speed_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_status "okay"
#define DT_N_S_soc_S_adc_4003b000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_4003b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_4003b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_4003b000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_4003b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_4003b000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4003b000, status, 0)
#define DT_N_S_soc_S_adc_4003b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4003b000, status, 0)
#define DT_N_S_soc_S_adc_4003b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4003b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4003b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_status_LEN 1
#define DT_N_S_soc_S_adc_4003b000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_compatible {"nxp,kinetis-adc16"}
#define DT_N_S_soc_S_adc_4003b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_compatible_IDX_0 "nxp,kinetis-adc16"
#define DT_N_S_soc_S_adc_4003b000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-adc16
#define DT_N_S_soc_S_adc_4003b000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_adc16
#define DT_N_S_soc_S_adc_4003b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_ADC16
#define DT_N_S_soc_S_adc_4003b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4003b000, compatible, 0)
#define DT_N_S_soc_S_adc_4003b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4003b000, compatible, 0)
#define DT_N_S_soc_S_adc_4003b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4003b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4003b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_4003b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_4003b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_4003b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_4003b000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_S_pinmux_adc0
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_S_pinmux_adc0
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4003b000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_4003b000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /temp0
 *
 * Node identifier: DT_N_S_temp0
 *
 * Binding (compatible = nxp,kinetis-temperature):
 *   $ZEPHYR_BASE\dts\bindings\sensor\nxp,kinetis-temperature.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_temp0_PATH "/temp0"

/* Node's name with unit-address: */
#define DT_N_S_temp0_FULL_NAME "temp0"
#define DT_N_S_temp0_FULL_NAME_UNQUOTED temp0
#define DT_N_S_temp0_FULL_NAME_TOKEN temp0
#define DT_N_S_temp0_FULL_NAME_UPPER_TOKEN TEMP0

/* Node parent (/) identifier: */
#define DT_N_S_temp0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_temp0_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_temp0_NODELABEL_NUM 1
#define DT_N_S_temp0_FOREACH_NODELABEL(fn) fn(temp0)
#define DT_N_S_temp0_FOREACH_NODELABEL_VARGS(fn, ...) fn(temp0, __VA_ARGS__)
#define DT_N_S_temp0_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_temp0_CHILD_NUM 0
#define DT_N_S_temp0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_temp0_FOREACH_CHILD(fn) 
#define DT_N_S_temp0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_temp0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_temp0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_temp0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_temp0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_temp0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_temp0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_temp0_HASH r3lqgu_8zlOdNlNfJrCriC7aBpZTGGJpV_Cgv9dhhZI

/* Node's dependency ordinal: */
#define DT_N_S_temp0_ORD 9
#define DT_N_S_temp0_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_temp0_REQUIRES_ORDS \
	0, /* / */ \
	8, /* /soc/adc@4003b000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_temp0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_temp0_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_temperature DT_N_S_temp0
#define DT_N_NODELABEL_temp0                DT_N_S_temp0

/* Macros for properties that are special in the specification: */
#define DT_N_S_temp0_REG_NUM 0
#define DT_N_S_temp0_RANGES_NUM 0
#define DT_N_S_temp0_FOREACH_RANGE(fn) 
#define DT_N_S_temp0_IRQ_NUM 0
#define DT_N_S_temp0_IRQ_LEVEL 0
#define DT_N_S_temp0_COMPAT_MATCHES_nxp_kinetis_temperature 1
#define DT_N_S_temp0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_temp0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_temp0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_temp0_COMPAT_MODEL_IDX_0 "kinetis-temperature"
#define DT_N_S_temp0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_temp0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_temp0_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_temp0_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_4003b000
#define DT_N_S_temp0_P_io_channels_IDX_0_VAL_input 26
#define DT_N_S_temp0_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_temp0_P_io_channels_IDX_0_NAME "SENSOR"
#define DT_N_S_temp0_P_io_channels_NAME_sensor_PH DT_N_S_soc_S_adc_4003b000
#define DT_N_S_temp0_P_io_channels_NAME_sensor_EXISTS 1
#define DT_N_S_temp0_P_io_channels_NAME_sensor_VAL_input DT_N_S_temp0_P_io_channels_IDX_0_VAL_input
#define DT_N_S_temp0_P_io_channels_NAME_sensor_VAL_input_EXISTS 1
#define DT_N_S_temp0_P_io_channels_IDX_1_EXISTS 1
#define DT_N_S_temp0_P_io_channels_IDX_1_PH DT_N_S_soc_S_adc_4003b000
#define DT_N_S_temp0_P_io_channels_IDX_1_VAL_input 27
#define DT_N_S_temp0_P_io_channels_IDX_1_VAL_input_EXISTS 1
#define DT_N_S_temp0_P_io_channels_IDX_1_NAME "BANDGAP"
#define DT_N_S_temp0_P_io_channels_NAME_bandgap_PH DT_N_S_soc_S_adc_4003b000
#define DT_N_S_temp0_P_io_channels_NAME_bandgap_EXISTS 1
#define DT_N_S_temp0_P_io_channels_NAME_bandgap_VAL_input DT_N_S_temp0_P_io_channels_IDX_1_VAL_input
#define DT_N_S_temp0_P_io_channels_NAME_bandgap_VAL_input_EXISTS 1
#define DT_N_S_temp0_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_temp0, io_channels, 0) \
	fn(DT_N_S_temp0, io_channels, 1)
#define DT_N_S_temp0_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_temp0, io_channels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_temp0, io_channels, 1)
#define DT_N_S_temp0_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_temp0, io_channels, 0, __VA_ARGS__) \
	fn(DT_N_S_temp0, io_channels, 1, __VA_ARGS__)
#define DT_N_S_temp0_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_temp0, io_channels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_temp0, io_channels, 1, __VA_ARGS__)
#define DT_N_S_temp0_P_io_channels_LEN 2
#define DT_N_S_temp0_P_io_channels_EXISTS 1
#define DT_N_S_temp0_P_io_channel_names {"SENSOR", "BANDGAP"}
#define DT_N_S_temp0_P_io_channel_names_IDX_0_EXISTS 1
#define DT_N_S_temp0_P_io_channel_names_IDX_0 "SENSOR"
#define DT_N_S_temp0_P_io_channel_names_IDX_0_STRING_UNQUOTED SENSOR
#define DT_N_S_temp0_P_io_channel_names_IDX_0_STRING_TOKEN SENSOR
#define DT_N_S_temp0_P_io_channel_names_IDX_0_STRING_UPPER_TOKEN SENSOR
#define DT_N_S_temp0_P_io_channel_names_IDX_1_EXISTS 1
#define DT_N_S_temp0_P_io_channel_names_IDX_1 "BANDGAP"
#define DT_N_S_temp0_P_io_channel_names_IDX_1_STRING_UNQUOTED BANDGAP
#define DT_N_S_temp0_P_io_channel_names_IDX_1_STRING_TOKEN BANDGAP
#define DT_N_S_temp0_P_io_channel_names_IDX_1_STRING_UPPER_TOKEN BANDGAP
#define DT_N_S_temp0_P_io_channel_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_temp0, io_channel_names, 0) \
	fn(DT_N_S_temp0, io_channel_names, 1)
#define DT_N_S_temp0_P_io_channel_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_temp0, io_channel_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_temp0, io_channel_names, 1)
#define DT_N_S_temp0_P_io_channel_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_temp0, io_channel_names, 0, __VA_ARGS__) \
	fn(DT_N_S_temp0, io_channel_names, 1, __VA_ARGS__)
#define DT_N_S_temp0_P_io_channel_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_temp0, io_channel_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_temp0, io_channel_names, 1, __VA_ARGS__)
#define DT_N_S_temp0_P_io_channel_names_LEN 2
#define DT_N_S_temp0_P_io_channel_names_EXISTS 1
#define DT_N_S_temp0_P_bandgap_voltage 1000000
#define DT_N_S_temp0_P_bandgap_voltage_EXISTS 1
#define DT_N_S_temp0_P_vtemp25 716000
#define DT_N_S_temp0_P_vtemp25_EXISTS 1
#define DT_N_S_temp0_P_sensor_slope_cold 1620
#define DT_N_S_temp0_P_sensor_slope_cold_EXISTS 1
#define DT_N_S_temp0_P_sensor_slope_hot 1620
#define DT_N_S_temp0_P_sensor_slope_hot_EXISTS 1
#define DT_N_S_temp0_P_status "disabled"
#define DT_N_S_temp0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_temp0_P_status_STRING_TOKEN disabled
#define DT_N_S_temp0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_temp0_P_status_IDX_0 "disabled"
#define DT_N_S_temp0_P_status_IDX_0_EXISTS 1
#define DT_N_S_temp0_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_temp0_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_temp0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_temp0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_temp0, status, 0)
#define DT_N_S_temp0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_temp0, status, 0)
#define DT_N_S_temp0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_temp0, status, 0, __VA_ARGS__)
#define DT_N_S_temp0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_temp0, status, 0, __VA_ARGS__)
#define DT_N_S_temp0_P_status_LEN 1
#define DT_N_S_temp0_P_status_EXISTS 1
#define DT_N_S_temp0_P_compatible {"nxp,kinetis-temperature"}
#define DT_N_S_temp0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_temp0_P_compatible_IDX_0 "nxp,kinetis-temperature"
#define DT_N_S_temp0_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-temperature
#define DT_N_S_temp0_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_temperature
#define DT_N_S_temp0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_TEMPERATURE
#define DT_N_S_temp0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_temp0, compatible, 0)
#define DT_N_S_temp0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_temp0, compatible, 0)
#define DT_N_S_temp0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_temp0, compatible, 0, __VA_ARGS__)
#define DT_N_S_temp0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_temp0, compatible, 0, __VA_ARGS__)
#define DT_N_S_temp0_P_compatible_LEN 1
#define DT_N_S_temp0_P_compatible_EXISTS 1
#define DT_N_S_temp0_P_zephyr_deferred_init 0
#define DT_N_S_temp0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_temp0_P_wakeup_source 0
#define DT_N_S_temp0_P_wakeup_source_EXISTS 1
#define DT_N_S_temp0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_temp0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"
#define DT_N_S_clocks_FULL_NAME_UNQUOTED clocks
#define DT_N_S_clocks_FULL_NAME_TOKEN clocks
#define DT_N_S_clocks_FULL_NAME_UPPER_TOKEN CLOCKS

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_clocks_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 1
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_osc)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_osc)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_osc, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_osc, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_osc)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_osc)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_osc, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_osc, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_clocks_HASH 3P3fmk_q5wPvaymGA6NeomHHBb_cCfQX2PaKw_k1t_w

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 10
#define DT_N_S_clocks_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	11, /* /clocks/osc */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/osc
 *
 * Node identifier: DT_N_S_clocks_S_osc
 *
 * Binding (compatible = nxp,mcxc-osc):
 *   $ZEPHYR_BASE\dts\bindings\clock\nxp,mcxc-osc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_osc_PATH "/clocks/osc"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_osc_FULL_NAME "osc"
#define DT_N_S_clocks_S_osc_FULL_NAME_UNQUOTED osc
#define DT_N_S_clocks_S_osc_FULL_NAME_TOKEN osc
#define DT_N_S_clocks_S_osc_FULL_NAME_UPPER_TOKEN OSC

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_osc_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_osc_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_osc_NODELABEL_NUM 1
#define DT_N_S_clocks_S_osc_FOREACH_NODELABEL(fn) fn(osc)
#define DT_N_S_clocks_S_osc_FOREACH_NODELABEL_VARGS(fn, ...) fn(osc, __VA_ARGS__)
#define DT_N_S_clocks_S_osc_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_osc_CHILD_NUM 0
#define DT_N_S_clocks_S_osc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_osc_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_osc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_osc_HASH NKO0nw2wrlN84nMQ86mArliPdXSpu_AcrDG_3YhZJgM

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_osc_ORD 11
#define DT_N_S_clocks_S_osc_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_osc_REQUIRES_ORDS \
	10, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_osc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_osc_EXISTS 1
#define DT_N_INST_0_nxp_mcxc_osc DT_N_S_clocks_S_osc
#define DT_N_NODELABEL_osc       DT_N_S_clocks_S_osc

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_osc_REG_NUM 0
#define DT_N_S_clocks_S_osc_RANGES_NUM 0
#define DT_N_S_clocks_S_osc_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_osc_IRQ_NUM 0
#define DT_N_S_clocks_S_osc_IRQ_LEVEL 0
#define DT_N_S_clocks_S_osc_COMPAT_MATCHES_nxp_mcxc_osc 1
#define DT_N_S_clocks_S_osc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_osc_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_clocks_S_osc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_osc_COMPAT_MODEL_IDX_0 "mcxc-osc"
#define DT_N_S_clocks_S_osc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_osc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_osc_P_load_capacitance_picofarads 0
#define DT_N_S_clocks_S_osc_P_load_capacitance_picofarads_IDX_0_ENUM_IDX 0
#define DT_N_S_clocks_S_osc_P_load_capacitance_picofarads_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_osc_P_load_capacitance_picofarads_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_clocks_S_osc_P_load_capacitance_picofarads_ENUM_VAL_0_EXISTS 1
#define DT_N_S_clocks_S_osc_P_load_capacitance_picofarads_EXISTS 1
#define DT_N_S_clocks_S_osc_P_mode "low-power"
#define DT_N_S_clocks_S_osc_P_mode_STRING_UNQUOTED low-power
#define DT_N_S_clocks_S_osc_P_mode_STRING_TOKEN low_power
#define DT_N_S_clocks_S_osc_P_mode_STRING_UPPER_TOKEN LOW_POWER
#define DT_N_S_clocks_S_osc_P_mode_IDX_0 "low-power"
#define DT_N_S_clocks_S_osc_P_mode_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_osc_P_mode_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_osc_P_mode_IDX_0_ENUM_VAL_low_power_EXISTS 1
#define DT_N_S_clocks_S_osc_P_mode_ENUM_VAL_low_power_EXISTS 1
#define DT_N_S_clocks_S_osc_P_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_osc, mode, 0)
#define DT_N_S_clocks_S_osc_P_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_osc, mode, 0)
#define DT_N_S_clocks_S_osc_P_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_osc, mode, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_osc_P_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_osc, mode, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_osc_P_mode_LEN 1
#define DT_N_S_clocks_S_osc_P_mode_EXISTS 1
#define DT_N_S_clocks_S_osc_P_clock_frequency 32768
#define DT_N_S_clocks_S_osc_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_osc_P_compatible {"nxp,mcxc-osc"}
#define DT_N_S_clocks_S_osc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_osc_P_compatible_IDX_0 "nxp,mcxc-osc"
#define DT_N_S_clocks_S_osc_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcxc-osc
#define DT_N_S_clocks_S_osc_P_compatible_IDX_0_STRING_TOKEN nxp_mcxc_osc
#define DT_N_S_clocks_S_osc_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCXC_OSC
#define DT_N_S_clocks_S_osc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_osc, compatible, 0)
#define DT_N_S_clocks_S_osc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_osc, compatible, 0)
#define DT_N_S_clocks_S_osc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_osc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_osc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_osc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_osc_P_compatible_LEN 1
#define DT_N_S_clocks_S_osc_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_osc_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_osc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_osc_P_wakeup_source 0
#define DT_N_S_clocks_S_osc_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_osc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_osc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 12
#define DT_N_S_cpus_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	13, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m0+):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 13
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	12, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m0_ DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 48000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m0+
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sim@40047000
 *
 * Node identifier: DT_N_S_soc_S_sim_40047000
 *
 * Binding (compatible = nxp,kinetis-sim):
 *   $ZEPHYR_BASE\dts\bindings\clock\nxp,kinetis-sim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sim_40047000_PATH "/soc/sim@40047000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sim_40047000_FULL_NAME "sim@40047000"
#define DT_N_S_soc_S_sim_40047000_FULL_NAME_UNQUOTED sim@40047000
#define DT_N_S_soc_S_sim_40047000_FULL_NAME_TOKEN sim_40047000
#define DT_N_S_soc_S_sim_40047000_FULL_NAME_UPPER_TOKEN SIM_40047000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sim_40047000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sim_40047000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sim_40047000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sim_40047000_FOREACH_NODELABEL(fn) fn(sim)
#define DT_N_S_soc_S_sim_40047000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sim, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sim_40047000_CHILD_NUM 2
#define DT_N_S_soc_S_sim_40047000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000_S_flash_clk)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000_S_flash_clk)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_sim_40047000_HASH IrpoOpt_JMa5vuMLVwtiC8uewzIERij3ZPOapThF2tk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sim_40047000_ORD 14
#define DT_N_S_soc_S_sim_40047000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sim_40047000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sim_40047000_SUPPORTS_ORDS \
	15, /* /soc/pinmux@40049000 */ \
	17, /* /soc/pinmux@4004b000 */ \
	22, /* /soc/pinmux@4004c000 */ \
	24, /* /soc/pinmux@4004d000 */ \
	39, /* /soc/pwm@40038000 */ \
	44, /* /soc/pinmux@4004a000 */ \
	46, /* /soc/i2c@40067000 */ \
	48, /* /soc/pwm@40039000 */ \
	49, /* /soc/pwm@4003a000 */ \
	52, /* /soc/uart@40054000 */ \
	53, /* /soc/uart@40055000 */ \
	54, /* /soc/uart@4006c000 */ \
	58, /* /soc/i2c@40066000 */ \
	60, /* /soc/pit@40037000 */ \
	64, /* /soc/sim@40047000/core_clk */ \
	65, /* /soc/sim@40047000/flash_clk */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sim_40047000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_sim DT_N_S_soc_S_sim_40047000
#define DT_N_NODELABEL_sim          DT_N_S_soc_S_sim_40047000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sim_40047000_REG_NUM 1
#define DT_N_S_soc_S_sim_40047000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_REG_IDX_0_VAL_ADDRESS 1074032640 /* 0x40047000 */
#define DT_N_S_soc_S_sim_40047000_REG_IDX_0_VAL_SIZE 4192 /* 0x1060 */
#define DT_N_S_soc_S_sim_40047000_RANGES_NUM 0
#define DT_N_S_soc_S_sim_40047000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sim_40047000_IRQ_NUM 0
#define DT_N_S_soc_S_sim_40047000_IRQ_LEVEL 0
#define DT_N_S_soc_S_sim_40047000_COMPAT_MATCHES_nxp_kinetis_sim 1
#define DT_N_S_soc_S_sim_40047000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_sim_40047000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_COMPAT_MODEL_IDX_0 "kinetis-sim"
#define DT_N_S_soc_S_sim_40047000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sim_40047000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sim_40047000_P_reg {1074032640 /* 0x40047000 */, 4192 /* 0x1060 */}
#define DT_N_S_soc_S_sim_40047000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_reg_IDX_0 1074032640
#define DT_N_S_soc_S_sim_40047000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_reg_IDX_1 4192
#define DT_N_S_soc_S_sim_40047000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_pllfll_select 1
#define DT_N_S_soc_S_sim_40047000_P_pllfll_select_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_er32k_select 0
#define DT_N_S_soc_S_sim_40047000_P_er32k_select_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_compatible {"nxp,kinetis-sim"}
#define DT_N_S_soc_S_sim_40047000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_compatible_IDX_0 "nxp,kinetis-sim"
#define DT_N_S_soc_S_sim_40047000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-sim
#define DT_N_S_soc_S_sim_40047000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_sim
#define DT_N_S_soc_S_sim_40047000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_SIM
#define DT_N_S_soc_S_sim_40047000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sim_40047000, compatible, 0)
#define DT_N_S_soc_S_sim_40047000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sim_40047000, compatible, 0)
#define DT_N_S_soc_S_sim_40047000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sim_40047000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sim_40047000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_P_compatible_LEN 1
#define DT_N_S_soc_S_sim_40047000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sim_40047000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_wakeup_source 0
#define DT_N_S_soc_S_sim_40047000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sim_40047000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@40049000
 *
 * Node identifier: DT_N_S_soc_S_pinmux_40049000
 *
 * Binding (compatible = nxp,port-pinmux):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nxp,port-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_40049000_PATH "/soc/pinmux@40049000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_40049000_FULL_NAME "pinmux@40049000"
#define DT_N_S_soc_S_pinmux_40049000_FULL_NAME_UNQUOTED pinmux@40049000
#define DT_N_S_soc_S_pinmux_40049000_FULL_NAME_TOKEN pinmux_40049000
#define DT_N_S_soc_S_pinmux_40049000_FULL_NAME_UPPER_TOKEN PINMUX_40049000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_40049000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_40049000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_40049000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_NODELABEL(fn) fn(porta)
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_NODELABEL_VARGS(fn, ...) fn(porta, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_40049000_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_40049000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_40049000_HASH TtUcgXYo6DlZOjH1qBoom_rGwedTNlUFyrg9Ujyu3IM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_40049000_ORD 15
#define DT_N_S_soc_S_pinmux_40049000_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_40049000_REQUIRES_ORDS \
	4, /* /soc */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_40049000_SUPPORTS_ORDS \
	16, /* /soc/gpio@400ff000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_40049000_EXISTS 1
#define DT_N_INST_0_nxp_port_pinmux DT_N_S_soc_S_pinmux_40049000
#define DT_N_NODELABEL_porta        DT_N_S_soc_S_pinmux_40049000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_40049000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_40049000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_REG_IDX_0_VAL_ADDRESS 1074040832 /* 0x40049000 */
#define DT_N_S_soc_S_pinmux_40049000_REG_IDX_0_VAL_SIZE 208 /* 0xd0 */
#define DT_N_S_soc_S_pinmux_40049000_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_40049000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_40049000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_40049000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_40049000_COMPAT_MATCHES_nxp_port_pinmux 1
#define DT_N_S_soc_S_pinmux_40049000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pinmux_40049000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_COMPAT_MODEL_IDX_0 "port-pinmux"
#define DT_N_S_soc_S_pinmux_40049000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_40049000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_40049000_P_reg {1074040832 /* 0x40049000 */, 208 /* 0xd0 */}
#define DT_N_S_soc_S_pinmux_40049000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_reg_IDX_0 1074040832
#define DT_N_S_soc_S_pinmux_40049000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_reg_IDX_1 208
#define DT_N_S_soc_S_pinmux_40049000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_VAL_bits 9
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_40049000, clocks, 0)
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_40049000, clocks, 0)
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_40049000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_40049000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_LEN 1
#define DT_N_S_soc_S_pinmux_40049000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_compatible {"nxp,port-pinmux"}
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_IDX_0 "nxp,port-pinmux"
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_IDX_0_STRING_UNQUOTED nxp,port-pinmux
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_IDX_0_STRING_TOKEN nxp_port_pinmux
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PORT_PINMUX
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_40049000, compatible, 0)
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_40049000, compatible, 0)
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_40049000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_40049000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_40049000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_40049000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_40049000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_40049000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_40049000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400ff000
 *
 * Node identifier: DT_N_S_soc_S_gpio_400ff000
 *
 * Binding (compatible = nxp,kinetis-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,kinetis-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400ff000_PATH "/soc/gpio@400ff000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400ff000_FULL_NAME "gpio@400ff000"
#define DT_N_S_soc_S_gpio_400ff000_FULL_NAME_UNQUOTED gpio@400ff000
#define DT_N_S_soc_S_gpio_400ff000_FULL_NAME_TOKEN gpio_400ff000
#define DT_N_S_soc_S_gpio_400ff000_FULL_NAME_UPPER_TOKEN GPIO_400FF000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400ff000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400ff000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400ff000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400ff000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400ff000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_400ff000_HASH ZedrmO1GloEIwE3zAsOzMtZ3a9Ttm5k4XXqzKQJ2tDo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400ff000_ORD 16
#define DT_N_S_soc_S_gpio_400ff000_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400ff000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	15, /* /soc/pinmux@40049000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400ff000_SUPPORTS_ORDS \
	19, /* /gpio_keys */ \
	21, /* /gpio_keys/button_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400ff000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_gpio DT_N_S_soc_S_gpio_400ff000
#define DT_N_NODELABEL_gpioa         DT_N_S_soc_S_gpio_400ff000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400ff000_REG_NUM 1
#define DT_N_S_soc_S_gpio_400ff000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_REG_IDX_0_VAL_ADDRESS 1074786304 /* 0x400ff000 */
#define DT_N_S_soc_S_gpio_400ff000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_gpio_400ff000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400ff000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400ff000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpio_400ff000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_400ff000_COMPAT_MATCHES_nxp_kinetis_gpio 1
#define DT_N_S_soc_S_gpio_400ff000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_400ff000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_COMPAT_MODEL_IDX_0 "kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400ff000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400ff000_P_reg {1074786304 /* 0x400ff000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_gpio_400ff000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_reg_IDX_0 1074786304
#define DT_N_S_soc_S_gpio_400ff000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_reg_IDX_1 64
#define DT_N_S_soc_S_gpio_400ff000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port DT_N_S_soc_S_pinmux_40049000
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_IDX_0 DT_N_S_soc_S_pinmux_40049000
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_IDX_0_PH DT_N_S_soc_S_pinmux_40049000
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff000, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff000, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff000, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff000, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_LEN 1
#define DT_N_S_soc_S_gpio_400ff000_P_nxp_kinetis_port_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_gpio_port_offest 0
#define DT_N_S_soc_S_gpio_400ff000_P_gpio_port_offest_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400ff000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_ngpios 32
#define DT_N_S_soc_S_gpio_400ff000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_status "okay"
#define DT_N_S_soc_S_gpio_400ff000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_400ff000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_400ff000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_400ff000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_400ff000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_400ff000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff000, status, 0)
#define DT_N_S_soc_S_gpio_400ff000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff000, status, 0)
#define DT_N_S_soc_S_gpio_400ff000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400ff000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_compatible {"nxp,kinetis-gpio"}
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_IDX_0 "nxp,kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-gpio
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_gpio
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_GPIO
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff000, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff000, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400ff000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_interrupts {30 /* 0x1e */, 2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_400ff000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_gpio_400ff000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_gpio_400ff000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400ff000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400ff000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400ff000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@4004b000
 *
 * Node identifier: DT_N_S_soc_S_pinmux_4004b000
 *
 * Binding (compatible = nxp,port-pinmux):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nxp,port-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_4004b000_PATH "/soc/pinmux@4004b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_4004b000_FULL_NAME "pinmux@4004b000"
#define DT_N_S_soc_S_pinmux_4004b000_FULL_NAME_UNQUOTED pinmux@4004b000
#define DT_N_S_soc_S_pinmux_4004b000_FULL_NAME_TOKEN pinmux_4004b000
#define DT_N_S_soc_S_pinmux_4004b000_FULL_NAME_UPPER_TOKEN PINMUX_4004B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_4004b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_4004b000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_4004b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_NODELABEL(fn) fn(portc)
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(portc, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_4004b000_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_4004b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_4004b000_HASH _qjFF4xJEfQVTIzZhOC1gGYtrxxqnTP_SJFUewNGaVE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_4004b000_ORD 17
#define DT_N_S_soc_S_pinmux_4004b000_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_4004b000_REQUIRES_ORDS \
	4, /* /soc */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_4004b000_SUPPORTS_ORDS \
	18, /* /soc/gpio@400ff080 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_4004b000_EXISTS 1
#define DT_N_INST_2_nxp_port_pinmux DT_N_S_soc_S_pinmux_4004b000
#define DT_N_NODELABEL_portc        DT_N_S_soc_S_pinmux_4004b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_4004b000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_4004b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_REG_IDX_0_VAL_ADDRESS 1074049024 /* 0x4004b000 */
#define DT_N_S_soc_S_pinmux_4004b000_REG_IDX_0_VAL_SIZE 208 /* 0xd0 */
#define DT_N_S_soc_S_pinmux_4004b000_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_4004b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_4004b000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_4004b000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_4004b000_COMPAT_MATCHES_nxp_port_pinmux 1
#define DT_N_S_soc_S_pinmux_4004b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pinmux_4004b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_COMPAT_MODEL_IDX_0 "port-pinmux"
#define DT_N_S_soc_S_pinmux_4004b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_4004b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_4004b000_P_reg {1074049024 /* 0x4004b000 */, 208 /* 0xd0 */}
#define DT_N_S_soc_S_pinmux_4004b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_reg_IDX_0 1074049024
#define DT_N_S_soc_S_pinmux_4004b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_reg_IDX_1 208
#define DT_N_S_soc_S_pinmux_4004b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_VAL_bits 11
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004b000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004b000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_LEN 1
#define DT_N_S_soc_S_pinmux_4004b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible {"nxp,port-pinmux"}
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_IDX_0 "nxp,port-pinmux"
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_IDX_0_STRING_UNQUOTED nxp,port-pinmux
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_IDX_0_STRING_TOKEN nxp_port_pinmux
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PORT_PINMUX
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004b000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004b000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_4004b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_4004b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_4004b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_4004b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400ff080
 *
 * Node identifier: DT_N_S_soc_S_gpio_400ff080
 *
 * Binding (compatible = nxp,kinetis-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,kinetis-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400ff080_PATH "/soc/gpio@400ff080"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400ff080_FULL_NAME "gpio@400ff080"
#define DT_N_S_soc_S_gpio_400ff080_FULL_NAME_UNQUOTED gpio@400ff080
#define DT_N_S_soc_S_gpio_400ff080_FULL_NAME_TOKEN gpio_400ff080
#define DT_N_S_soc_S_gpio_400ff080_FULL_NAME_UPPER_TOKEN GPIO_400FF080

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400ff080_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400ff080_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400ff080_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_NODELABEL(fn) fn(gpioc)
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioc, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400ff080_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400ff080_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_400ff080_HASH IRDraehBflxl3cMKLVTgOZYJsOvNa_Rbg2iZI7hMz8Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400ff080_ORD 18
#define DT_N_S_soc_S_gpio_400ff080_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400ff080_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/pinmux@4004b000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400ff080_SUPPORTS_ORDS \
	19, /* /gpio_keys */ \
	20, /* /gpio_keys/button_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400ff080_EXISTS 1
#define DT_N_INST_2_nxp_kinetis_gpio DT_N_S_soc_S_gpio_400ff080
#define DT_N_NODELABEL_gpioc         DT_N_S_soc_S_gpio_400ff080

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400ff080_REG_NUM 1
#define DT_N_S_soc_S_gpio_400ff080_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_REG_IDX_0_VAL_ADDRESS 1074786432 /* 0x400ff080 */
#define DT_N_S_soc_S_gpio_400ff080_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_gpio_400ff080_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400ff080_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400ff080_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpio_400ff080_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_400ff080_COMPAT_MATCHES_nxp_kinetis_gpio 1
#define DT_N_S_soc_S_gpio_400ff080_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_400ff080_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_COMPAT_MODEL_IDX_0 "kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff080_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400ff080_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400ff080_P_reg {1074786432 /* 0x400ff080 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_gpio_400ff080_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_reg_IDX_0 1074786432
#define DT_N_S_soc_S_gpio_400ff080_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_reg_IDX_1 64
#define DT_N_S_soc_S_gpio_400ff080_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port DT_N_S_soc_S_pinmux_4004b000
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_IDX_0 DT_N_S_soc_S_pinmux_4004b000
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_IDX_0_PH DT_N_S_soc_S_pinmux_4004b000
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff080, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff080, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff080, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff080, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_LEN 1
#define DT_N_S_soc_S_gpio_400ff080_P_nxp_kinetis_port_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_gpio_port_offest 0
#define DT_N_S_soc_S_gpio_400ff080_P_gpio_port_offest_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400ff080_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_ngpios 32
#define DT_N_S_soc_S_gpio_400ff080_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_status "okay"
#define DT_N_S_soc_S_gpio_400ff080_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_400ff080_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_400ff080_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_400ff080_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_400ff080_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_400ff080_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff080, status, 0)
#define DT_N_S_soc_S_gpio_400ff080_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff080, status, 0)
#define DT_N_S_soc_S_gpio_400ff080_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff080, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff080, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400ff080_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_compatible {"nxp,kinetis-gpio"}
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_IDX_0 "nxp,kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-gpio
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_gpio
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_GPIO
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff080, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff080, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400ff080_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_interrupts {31 /* 0x1f */, 2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_400ff080_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_gpio_400ff080_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_gpio_400ff080_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400ff080_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400ff080_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff080_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400ff080_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\input\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"
#define DT_N_S_gpio_keys_FULL_NAME_UNQUOTED gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_TOKEN gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_UPPER_TOKEN GPIO_KEYS

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_NODELABEL_NUM 0
#define DT_N_S_gpio_keys_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio_keys_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_CHILD_NUM 2
#define DT_N_S_gpio_keys_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_gpio_keys_HASH o_cyM_1oGxkDdZvjWwmF_qWSV_TFQR0RmVqGE69cQ78

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 19
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */ \
	16, /* /soc/gpio@400ff000 */ \
	18, /* /soc/gpio@400ff080 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	20, /* /gpio_keys/button_2 */ \
	21, /* /gpio_keys/button_3 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_polling_mode 0
#define DT_N_S_gpio_keys_P_polling_mode_EXISTS 1
#define DT_N_S_gpio_keys_P_no_disconnect 0
#define DT_N_S_gpio_keys_P_no_disconnect_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_deferred_init 0
#define DT_N_S_gpio_keys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_2
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_2_PATH "/gpio_keys/button_2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME "button_2"
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME_UNQUOTED button_2
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME_TOKEN button_2
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME_UPPER_TOKEN BUTTON_2

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_2_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_2_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_2_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_2_FOREACH_NODELABEL(fn) fn(user_button_2)
#define DT_N_S_gpio_keys_S_button_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(user_button_2, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_2_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_2_HASH ZrOJnupqYKwaKvxYYqd18TwRo0rN6ZGAzKI7J_b18kA

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_2_ORD 20
#define DT_N_S_gpio_keys_S_button_2_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_2_REQUIRES_ORDS \
	18, /* /soc/gpio@400ff080 */ \
	19, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_2_EXISTS 1
#define DT_N_ALIAS_sw0               DT_N_S_gpio_keys_S_button_2
#define DT_N_NODELABEL_user_button_2 DT_N_S_gpio_keys_S_button_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_2_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_2_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_2_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400ff080
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin 3
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_label "User SW2"
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_UNQUOTED User SW2
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_TOKEN User_SW2
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_UPPER_TOKEN USER_SW2
#define DT_N_S_gpio_keys_S_button_2_P_label_IDX_0 "User SW2"
#define DT_N_S_gpio_keys_S_button_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, label, 0)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_2, label, 0)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_2, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_2_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_2_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_3
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_3_PATH "/gpio_keys/button_3"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME "button_3"
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME_UNQUOTED button_3
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME_TOKEN button_3
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME_UPPER_TOKEN BUTTON_3

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_3_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_3_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_3_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_3_FOREACH_NODELABEL(fn) fn(user_button_3)
#define DT_N_S_gpio_keys_S_button_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(user_button_3, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_3_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_3_HASH Kv6QQmLqNfb2jRJeZ6skgMzgw_P2TzoriqnpYzI8foY

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_3_ORD 21
#define DT_N_S_gpio_keys_S_button_3_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_3_REQUIRES_ORDS \
	16, /* /soc/gpio@400ff000 */ \
	19, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_3_EXISTS 1
#define DT_N_ALIAS_sw1               DT_N_S_gpio_keys_S_button_3
#define DT_N_NODELABEL_user_button_3 DT_N_S_gpio_keys_S_button_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_3_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_3_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_3_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_3_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_3_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400ff000
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_label "User SW3"
#define DT_N_S_gpio_keys_S_button_3_P_label_STRING_UNQUOTED User SW3
#define DT_N_S_gpio_keys_S_button_3_P_label_STRING_TOKEN User_SW3
#define DT_N_S_gpio_keys_S_button_3_P_label_STRING_UPPER_TOKEN USER_SW3
#define DT_N_S_gpio_keys_S_button_3_P_label_IDX_0 "User SW3"
#define DT_N_S_gpio_keys_S_button_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_3, label, 0)
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_3, label, 0)
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_3, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_3, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_3_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_zephyr_code 2
#define DT_N_S_gpio_keys_S_button_3_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@4004c000
 *
 * Node identifier: DT_N_S_soc_S_pinmux_4004c000
 *
 * Binding (compatible = nxp,port-pinmux):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nxp,port-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_4004c000_PATH "/soc/pinmux@4004c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_4004c000_FULL_NAME "pinmux@4004c000"
#define DT_N_S_soc_S_pinmux_4004c000_FULL_NAME_UNQUOTED pinmux@4004c000
#define DT_N_S_soc_S_pinmux_4004c000_FULL_NAME_TOKEN pinmux_4004c000
#define DT_N_S_soc_S_pinmux_4004c000_FULL_NAME_UPPER_TOKEN PINMUX_4004C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_4004c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_4004c000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_4004c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_NODELABEL(fn) fn(portd)
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(portd, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_4004c000_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_4004c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_4004c000_HASH cWrc8gHltwnysvpYHd2DOrDqv_a3IFXeFHcVT2ZFZpA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_4004c000_ORD 22
#define DT_N_S_soc_S_pinmux_4004c000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_4004c000_REQUIRES_ORDS \
	4, /* /soc */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_4004c000_SUPPORTS_ORDS \
	23, /* /soc/gpio@400ff0c0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_4004c000_EXISTS 1
#define DT_N_INST_3_nxp_port_pinmux DT_N_S_soc_S_pinmux_4004c000
#define DT_N_NODELABEL_portd        DT_N_S_soc_S_pinmux_4004c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_4004c000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_4004c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_REG_IDX_0_VAL_ADDRESS 1074053120 /* 0x4004c000 */
#define DT_N_S_soc_S_pinmux_4004c000_REG_IDX_0_VAL_SIZE 208 /* 0xd0 */
#define DT_N_S_soc_S_pinmux_4004c000_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_4004c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_4004c000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_4004c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_4004c000_COMPAT_MATCHES_nxp_port_pinmux 1
#define DT_N_S_soc_S_pinmux_4004c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pinmux_4004c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_COMPAT_MODEL_IDX_0 "port-pinmux"
#define DT_N_S_soc_S_pinmux_4004c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_4004c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_4004c000_P_reg {1074053120 /* 0x4004c000 */, 208 /* 0xd0 */}
#define DT_N_S_soc_S_pinmux_4004c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_reg_IDX_0 1074053120
#define DT_N_S_soc_S_pinmux_4004c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_reg_IDX_1 208
#define DT_N_S_soc_S_pinmux_4004c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_VAL_bits 12
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004c000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004c000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_LEN 1
#define DT_N_S_soc_S_pinmux_4004c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible {"nxp,port-pinmux"}
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_IDX_0 "nxp,port-pinmux"
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_IDX_0_STRING_UNQUOTED nxp,port-pinmux
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_IDX_0_STRING_TOKEN nxp_port_pinmux
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PORT_PINMUX
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004c000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004c000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_4004c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_4004c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_4004c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_4004c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400ff0c0
 *
 * Node identifier: DT_N_S_soc_S_gpio_400ff0c0
 *
 * Binding (compatible = nxp,kinetis-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,kinetis-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400ff0c0_PATH "/soc/gpio@400ff0c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400ff0c0_FULL_NAME "gpio@400ff0c0"
#define DT_N_S_soc_S_gpio_400ff0c0_FULL_NAME_UNQUOTED gpio@400ff0c0
#define DT_N_S_soc_S_gpio_400ff0c0_FULL_NAME_TOKEN gpio_400ff0c0
#define DT_N_S_soc_S_gpio_400ff0c0_FULL_NAME_UPPER_TOKEN GPIO_400FF0C0

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400ff0c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400ff0c0_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400ff0c0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_NODELABEL(fn) fn(gpiod)
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiod, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400ff0c0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400ff0c0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_400ff0c0_HASH jown_CcX2_J9YekN6tZr3Bz41ItadM_hSsQktvHsnwQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400ff0c0_ORD 23
#define DT_N_S_soc_S_gpio_400ff0c0_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400ff0c0_REQUIRES_ORDS \
	4, /* /soc */ \
	22, /* /soc/pinmux@4004c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400ff0c0_SUPPORTS_ORDS \
	26, /* /leds */ \
	28, /* /leds/led_1 */ \
	59, /* /soc/i2c@40066000/fxls8974@18 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400ff0c0_EXISTS 1
#define DT_N_INST_3_nxp_kinetis_gpio DT_N_S_soc_S_gpio_400ff0c0
#define DT_N_NODELABEL_gpiod         DT_N_S_soc_S_gpio_400ff0c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400ff0c0_REG_NUM 1
#define DT_N_S_soc_S_gpio_400ff0c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_REG_IDX_0_VAL_ADDRESS 1074786496 /* 0x400ff0c0 */
#define DT_N_S_soc_S_gpio_400ff0c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_gpio_400ff0c0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400ff0c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400ff0c0_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_400ff0c0_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_400ff0c0_COMPAT_MATCHES_nxp_kinetis_gpio 1
#define DT_N_S_soc_S_gpio_400ff0c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_400ff0c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_COMPAT_MODEL_IDX_0 "kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff0c0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400ff0c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400ff0c0_P_reg {1074786496 /* 0x400ff0c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_gpio_400ff0c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_reg_IDX_0 1074786496
#define DT_N_S_soc_S_gpio_400ff0c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_gpio_400ff0c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port DT_N_S_soc_S_pinmux_4004c000
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_IDX_0 DT_N_S_soc_S_pinmux_4004c000
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_IDX_0_PH DT_N_S_soc_S_pinmux_4004c000
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff0c0, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff0c0, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff0c0, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff0c0, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_LEN 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_nxp_kinetis_port_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_gpio_port_offest 0
#define DT_N_S_soc_S_gpio_400ff0c0_P_gpio_port_offest_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_ngpios 32
#define DT_N_S_soc_S_gpio_400ff0c0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_status "okay"
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff0c0, status, 0)
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff0c0, status, 0)
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff0c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff0c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible {"nxp,kinetis-gpio"}
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_IDX_0 "nxp,kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-gpio
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_gpio
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_GPIO
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff0c0, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff0c0, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff0c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff0c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400ff0c0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400ff0c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff0c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400ff0c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@4004d000
 *
 * Node identifier: DT_N_S_soc_S_pinmux_4004d000
 *
 * Binding (compatible = nxp,port-pinmux):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nxp,port-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_4004d000_PATH "/soc/pinmux@4004d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_4004d000_FULL_NAME "pinmux@4004d000"
#define DT_N_S_soc_S_pinmux_4004d000_FULL_NAME_UNQUOTED pinmux@4004d000
#define DT_N_S_soc_S_pinmux_4004d000_FULL_NAME_TOKEN pinmux_4004d000
#define DT_N_S_soc_S_pinmux_4004d000_FULL_NAME_UPPER_TOKEN PINMUX_4004D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_4004d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_4004d000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_4004d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_NODELABEL(fn) fn(porte)
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(porte, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_4004d000_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_4004d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_4004d000_HASH _NilvXP2Ryx09b_EZci3a0ov_IuyIsOylIfa3Vuphps

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_4004d000_ORD 24
#define DT_N_S_soc_S_pinmux_4004d000_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_4004d000_REQUIRES_ORDS \
	4, /* /soc */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_4004d000_SUPPORTS_ORDS \
	25, /* /soc/gpio@400ff100 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_4004d000_EXISTS 1
#define DT_N_INST_4_nxp_port_pinmux DT_N_S_soc_S_pinmux_4004d000
#define DT_N_NODELABEL_porte        DT_N_S_soc_S_pinmux_4004d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_4004d000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_4004d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_REG_IDX_0_VAL_ADDRESS 1074057216 /* 0x4004d000 */
#define DT_N_S_soc_S_pinmux_4004d000_REG_IDX_0_VAL_SIZE 208 /* 0xd0 */
#define DT_N_S_soc_S_pinmux_4004d000_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_4004d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_4004d000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_4004d000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_4004d000_COMPAT_MATCHES_nxp_port_pinmux 1
#define DT_N_S_soc_S_pinmux_4004d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pinmux_4004d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_COMPAT_MODEL_IDX_0 "port-pinmux"
#define DT_N_S_soc_S_pinmux_4004d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_4004d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_4004d000_P_reg {1074057216 /* 0x4004d000 */, 208 /* 0xd0 */}
#define DT_N_S_soc_S_pinmux_4004d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_reg_IDX_0 1074057216
#define DT_N_S_soc_S_pinmux_4004d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_reg_IDX_1 208
#define DT_N_S_soc_S_pinmux_4004d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_VAL_bits 13
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004d000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004d000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_LEN 1
#define DT_N_S_soc_S_pinmux_4004d000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible {"nxp,port-pinmux"}
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_IDX_0 "nxp,port-pinmux"
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_IDX_0_STRING_UNQUOTED nxp,port-pinmux
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_IDX_0_STRING_TOKEN nxp_port_pinmux
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PORT_PINMUX
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004d000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004d000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_4004d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_4004d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_4004d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_4004d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400ff100
 *
 * Node identifier: DT_N_S_soc_S_gpio_400ff100
 *
 * Binding (compatible = nxp,kinetis-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,kinetis-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400ff100_PATH "/soc/gpio@400ff100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400ff100_FULL_NAME "gpio@400ff100"
#define DT_N_S_soc_S_gpio_400ff100_FULL_NAME_UNQUOTED gpio@400ff100
#define DT_N_S_soc_S_gpio_400ff100_FULL_NAME_TOKEN gpio_400ff100
#define DT_N_S_soc_S_gpio_400ff100_FULL_NAME_UPPER_TOKEN GPIO_400FF100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400ff100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400ff100_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400ff100_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_NODELABEL(fn) fn(gpioe)
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioe, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400ff100_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400ff100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_400ff100_HASH njbrzlEHjcHiMKGvVtOe5JVIoO9osdUFXPEG8bOrfFE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400ff100_ORD 25
#define DT_N_S_soc_S_gpio_400ff100_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400ff100_REQUIRES_ORDS \
	4, /* /soc */ \
	24, /* /soc/pinmux@4004d000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400ff100_SUPPORTS_ORDS \
	26, /* /leds */ \
	27, /* /leds/led_0 */ \
	29, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400ff100_EXISTS 1
#define DT_N_INST_4_nxp_kinetis_gpio DT_N_S_soc_S_gpio_400ff100
#define DT_N_NODELABEL_gpioe         DT_N_S_soc_S_gpio_400ff100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400ff100_REG_NUM 1
#define DT_N_S_soc_S_gpio_400ff100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_REG_IDX_0_VAL_ADDRESS 1074786560 /* 0x400ff100 */
#define DT_N_S_soc_S_gpio_400ff100_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_gpio_400ff100_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400ff100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400ff100_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_400ff100_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_400ff100_COMPAT_MATCHES_nxp_kinetis_gpio 1
#define DT_N_S_soc_S_gpio_400ff100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_400ff100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_COMPAT_MODEL_IDX_0 "kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400ff100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400ff100_P_reg {1074786560 /* 0x400ff100 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_gpio_400ff100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_reg_IDX_0 1074786560
#define DT_N_S_soc_S_gpio_400ff100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_reg_IDX_1 64
#define DT_N_S_soc_S_gpio_400ff100_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port DT_N_S_soc_S_pinmux_4004d000
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_IDX_0 DT_N_S_soc_S_pinmux_4004d000
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_IDX_0_PH DT_N_S_soc_S_pinmux_4004d000
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff100, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff100, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff100, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff100, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_LEN 1
#define DT_N_S_soc_S_gpio_400ff100_P_nxp_kinetis_port_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_gpio_port_offest 0
#define DT_N_S_soc_S_gpio_400ff100_P_gpio_port_offest_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400ff100_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_ngpios 32
#define DT_N_S_soc_S_gpio_400ff100_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_status "okay"
#define DT_N_S_soc_S_gpio_400ff100_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_400ff100_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_400ff100_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_400ff100_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_400ff100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_400ff100_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff100, status, 0)
#define DT_N_S_soc_S_gpio_400ff100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff100, status, 0)
#define DT_N_S_soc_S_gpio_400ff100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400ff100_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_compatible {"nxp,kinetis-gpio"}
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_IDX_0 "nxp,kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-gpio
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_gpio
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_GPIO
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff100, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff100, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400ff100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400ff100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400ff100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400ff100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 3
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 26
#define DT_N_S_leds_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	23, /* /soc/gpio@400ff0c0 */ \
	25, /* /soc/gpio@400ff100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	27, /* /leds/led_0 */ \
	28, /* /leds/led_1 */ \
	29, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"
#define DT_N_S_leds_S_led_0_FULL_NAME_UNQUOTED led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_TOKEN led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_UPPER_TOKEN LED_0

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_0_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL(fn) fn(red_led)
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_CHILD_NUM 0
#define DT_N_S_leds_S_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_0_HASH kqSZv01Dnr_1hPdmxPVlr9u8kLMk_UWHIyVHG3GknSY

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 27
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	25, /* /soc/gpio@400ff100 */ \
	26, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0        DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_red_led DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400ff100
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 31
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Red LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED Red LED
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN Red_LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN RED_LED
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "Red LED"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"
#define DT_N_S_leds_S_led_1_FULL_NAME_UNQUOTED led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_TOKEN led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_UPPER_TOKEN LED_1

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(green_led)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_1_HASH iXGpSU4KdWdLNkNXyuDlz5Q9aavHPvjTPItAJ_Q0T5c

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 28
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	23, /* /soc/gpio@400ff0c0 */ \
	26, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led1          DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400ff0c0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "Green LED"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED Green LED
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN Green_LED
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN GREEN_LED
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "Green LED"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"
#define DT_N_S_leds_S_led_2_FULL_NAME_UNQUOTED led_2
#define DT_N_S_leds_S_led_2_FULL_NAME_TOKEN led_2
#define DT_N_S_leds_S_led_2_FULL_NAME_UPPER_TOKEN LED_2

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_2_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL(fn) fn(blue_led)
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(blue_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_CHILD_NUM 0
#define DT_N_S_leds_S_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_2_HASH KsPGInVliEI1PRs0DmyETNF7dyG4frBo_Z_DeHCKQaA

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 29
#define DT_N_S_leds_S_led_2_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	25, /* /soc/gpio@400ff100 */ \
	26, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led2         DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400ff100
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 29
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "Blue LED"
#define DT_N_S_leds_S_led_2_P_label_STRING_UNQUOTED Blue LED
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN Blue_LED
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN BLUE_LED
#define DT_N_S_leds_S_led_2_P_label_IDX_0 "Blue LED"
#define DT_N_S_leds_S_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_LEN 1
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /pinctrl/pinmux_adc0/group0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_adc0_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_PATH "/pinctrl/pinmux_adc0/group0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FULL_NAME "group0"
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/pinctrl/pinmux_adc0) identifier: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_PARENT DT_N_S_pinctrl_S_pinmux_adc0

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_NODELABEL_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_CHILD_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_HASH oushivywBxfs_cXIS1KrdSNmTNYZeJMVUFnfqeP4v_A

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_ORD 30
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_REQUIRES_ORDS \
	6, /* /pinctrl/pinmux_adc0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux {1157627904 /* 0x45000000 */, 1166016512 /* 0x45800000 */}
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_IDX_0 1157627904
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_IDX_1 1166016512
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 0) \
	fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_LEN 2
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength "low"
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_STRING_UNQUOTED low
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_STRING_TOKEN low
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_STRING_UPPER_TOKEN LOW
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_IDX_0 "low"
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_IDX_0_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_LEN 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate "slow"
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_IDX_0 "slow"
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_IDX_0_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_LEN 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_nxp_passive_filter 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_nxp_passive_filter_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_bias_pull_up 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_bias_pull_down 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_open_drain 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_input_enable 0
#define DT_N_S_pinctrl_S_pinmux_adc0_S_group0_P_input_enable_EXISTS 1

/*
 * Devicetree node: /pinctrl/pinmux_i2c0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_i2c0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_PATH "/pinctrl/pinmux_i2c0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_FULL_NAME "pinmux_i2c0"
#define DT_N_S_pinctrl_S_pinmux_i2c0_FULL_NAME_UNQUOTED pinmux_i2c0
#define DT_N_S_pinctrl_S_pinmux_i2c0_FULL_NAME_TOKEN pinmux_i2c0
#define DT_N_S_pinctrl_S_pinmux_i2c0_FULL_NAME_UPPER_TOKEN PINMUX_I2C0

/* Node parent (/pinctrl) identifier: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_PARENT DT_N_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_NODELABEL_NUM 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_NODELABEL(fn) fn(pinmux_i2c0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_i2c0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_i2c0_CHILD_NUM 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_HASH SvU41IWnNv2AK9IovPTvzXvGixR1_1JMeOZu5US5_kI

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_ORD 31
#define DT_N_S_pinctrl_S_pinmux_i2c0_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_REQUIRES_ORDS \
	5, /* /pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_SUPPORTS_ORDS \
	32, /* /pinctrl/pinmux_i2c0/group0 */ \
	58, /* /soc/i2c@40066000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_EXISTS 1
#define DT_N_NODELABEL_pinmux_i2c0 DT_N_S_pinctrl_S_pinmux_i2c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pinctrl/pinmux_i2c0/group0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_i2c0_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_PATH "/pinctrl/pinmux_i2c0/group0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FULL_NAME "group0"
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/pinctrl/pinmux_i2c0) identifier: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_PARENT DT_N_S_pinctrl_S_pinmux_i2c0

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_NODELABEL_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_S_pinmux_i2c0) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_CHILD_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_HASH kSmvN5kMuvQt5zIRRyGfXyPn_AUfs9WSiu_edIZ9wDk

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_ORD 32
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_REQUIRES_ORDS \
	31, /* /pinctrl/pinmux_i2c0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux {1174406400 /* 0x46000500 */, 1178600704 /* 0x46400500 */}
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_IDX_0 1174406400
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_IDX_1 1178600704
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 0) \
	fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_LEN 2
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength "low"
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_STRING_UNQUOTED low
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_STRING_TOKEN low
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_STRING_UPPER_TOKEN LOW
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_IDX_0 "low"
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_IDX_0_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_LEN 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate "fast"
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_IDX_0 "fast"
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_IDX_0_ENUM_VAL_fast_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_ENUM_VAL_fast_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_LEN 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_nxp_passive_filter 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_nxp_passive_filter_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_bias_pull_up 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_bias_pull_down 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_open_drain 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_input_enable 0
#define DT_N_S_pinctrl_S_pinmux_i2c0_S_group0_P_input_enable_EXISTS 1

/*
 * Devicetree node: /pinctrl/pinmux_lpuart0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_lpuart0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_PATH "/pinctrl/pinmux_lpuart0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FULL_NAME "pinmux_lpuart0"
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FULL_NAME_UNQUOTED pinmux_lpuart0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FULL_NAME_TOKEN pinmux_lpuart0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FULL_NAME_UPPER_TOKEN PINMUX_LPUART0

/* Node parent (/pinctrl) identifier: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_PARENT DT_N_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_NODELABEL_NUM 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_NODELABEL(fn) fn(pinmux_lpuart0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_lpuart0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_CHILD_NUM 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_HASH PM_E9XTaKeTw0VYShTPigmYtdNA1KhtRWDY57o7ciH0

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_ORD 33
#define DT_N_S_pinctrl_S_pinmux_lpuart0_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_REQUIRES_ORDS \
	5, /* /pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_SUPPORTS_ORDS \
	34, /* /pinctrl/pinmux_lpuart0/group0 */ \
	52, /* /soc/uart@40054000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpuart0 DT_N_S_pinctrl_S_pinmux_lpuart0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pinctrl/pinmux_lpuart0/group0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_PATH "/pinctrl/pinmux_lpuart0/group0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FULL_NAME "group0"
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/pinctrl/pinmux_lpuart0) identifier: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_PARENT DT_N_S_pinctrl_S_pinmux_lpuart0

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_NODELABEL_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_S_pinmux_lpuart0) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_CHILD_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_HASH 5B0h9wlG0R2B1_yxIrsvfvIPFUxl60n1dPPILvo78I0

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_ORD 34
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_REQUIRES_ORDS \
	33, /* /pinctrl/pinmux_lpuart0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux {4194816 /* 0x400200 */, 8389120 /* 0x800200 */}
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_IDX_0 4194816
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_IDX_1 8389120
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 0) \
	fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_LEN 2
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength "low"
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_STRING_UNQUOTED low
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_STRING_TOKEN low
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_STRING_UPPER_TOKEN LOW
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_IDX_0 "low"
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_IDX_0_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_LEN 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate "slow"
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_IDX_0 "slow"
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_IDX_0_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_LEN 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_nxp_passive_filter 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_nxp_passive_filter_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_bias_pull_up 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_bias_pull_down 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_open_drain 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_input_enable 0
#define DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0_P_input_enable_EXISTS 1

/*
 * Devicetree node: /pinctrl/pinmux_tpm0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_tpm0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_PATH "/pinctrl/pinmux_tpm0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_FULL_NAME "pinmux_tpm0"
#define DT_N_S_pinctrl_S_pinmux_tpm0_FULL_NAME_UNQUOTED pinmux_tpm0
#define DT_N_S_pinctrl_S_pinmux_tpm0_FULL_NAME_TOKEN pinmux_tpm0
#define DT_N_S_pinctrl_S_pinmux_tpm0_FULL_NAME_UPPER_TOKEN PINMUX_TPM0

/* Node parent (/pinctrl) identifier: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_PARENT DT_N_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_NODELABEL_NUM 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_NODELABEL(fn) fn(pinmux_tpm0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_tpm0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_tpm0_CHILD_NUM 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_HASH J5roRMccjvJR4Qm_w_V3VFz346TYUlvtRm6elaYVKZE

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_ORD 35
#define DT_N_S_pinctrl_S_pinmux_tpm0_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_REQUIRES_ORDS \
	5, /* /pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_SUPPORTS_ORDS \
	36, /* /pinctrl/pinmux_tpm0/group0 */ \
	39, /* /soc/pwm@40038000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_EXISTS 1
#define DT_N_NODELABEL_pinmux_tpm0 DT_N_S_pinctrl_S_pinmux_tpm0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pinctrl/pinmux_tpm0/group0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_tpm0_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_PATH "/pinctrl/pinmux_tpm0/group0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FULL_NAME "group0"
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/pinctrl/pinmux_tpm0) identifier: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_PARENT DT_N_S_pinctrl_S_pinmux_tpm0

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_NODELABEL_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_S_pinmux_tpm0) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_CHILD_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_HASH MaTsiuxytpZpTpai1_yDWw_gKCrytjiudWGKoVAyuPw

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_ORD 36
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_REQUIRES_ORDS \
	35, /* /pinctrl/pinmux_tpm0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux {1195377408 /* 0x47400300 */, 1203766016 /* 0x47c00300 */, 826278912 /* 0x31400400 */}
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_IDX_0 1195377408
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_IDX_1 1203766016
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_IDX_2 826278912
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 0) \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 1) \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 2)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 2)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_LEN 3
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength "low"
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_STRING_UNQUOTED low
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_STRING_TOKEN low
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_STRING_UPPER_TOKEN LOW
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_IDX_0 "low"
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_IDX_0_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_LEN 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate "slow"
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_IDX_0 "slow"
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_IDX_0_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_LEN 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_nxp_passive_filter 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_nxp_passive_filter_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_bias_pull_up 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_bias_pull_down 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_open_drain 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_input_enable 0
#define DT_N_S_pinctrl_S_pinmux_tpm0_S_group0_P_input_enable_EXISTS 1

/*
 * Devicetree node: /pinctrl/pinmux_uart2
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_uart2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_uart2_PATH "/pinctrl/pinmux_uart2"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_uart2_FULL_NAME "pinmux_uart2"
#define DT_N_S_pinctrl_S_pinmux_uart2_FULL_NAME_UNQUOTED pinmux_uart2
#define DT_N_S_pinctrl_S_pinmux_uart2_FULL_NAME_TOKEN pinmux_uart2
#define DT_N_S_pinctrl_S_pinmux_uart2_FULL_NAME_UPPER_TOKEN PINMUX_UART2

/* Node parent (/pinctrl) identifier: */
#define DT_N_S_pinctrl_S_pinmux_uart2_PARENT DT_N_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_uart2_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_uart2_NODELABEL_NUM 1
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_NODELABEL(fn) fn(pinmux_uart2)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_uart2, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_uart2_CHILD_NUM 1
#define DT_N_S_pinctrl_S_pinmux_uart2_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_uart2_HASH mdKUVBMSywjaZSBK_FdWnccgvFAENzd6TF7uQwCnVb4

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_uart2_ORD 37
#define DT_N_S_pinctrl_S_pinmux_uart2_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_uart2_REQUIRES_ORDS \
	5, /* /pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_uart2_SUPPORTS_ORDS \
	38, /* /pinctrl/pinmux_uart2/group0 */ \
	54, /* /soc/uart@4006c000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_uart2_EXISTS 1
#define DT_N_NODELABEL_pinmux_uart2 DT_N_S_pinctrl_S_pinmux_uart2

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_uart2_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_uart2_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_uart2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_uart2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pinctrl/pinmux_uart2/group0
 *
 * Node identifier: DT_N_S_pinctrl_S_pinmux_uart2_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_PATH "/pinctrl/pinmux_uart2/group0"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FULL_NAME "group0"
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/pinctrl/pinmux_uart2) identifier: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_PARENT DT_N_S_pinctrl_S_pinmux_uart2

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_NODELABEL_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_S_pinmux_uart2) fn(DT_N_S_pinctrl) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_CHILD_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_HASH 2GqnVJB0G21Ej6u92YykcfQ7ZTPhxmY0TlgFGyqh_5M

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_ORD 38
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_REQUIRES_ORDS \
	37, /* /pinctrl/pinmux_uart2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_REG_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_RANGES_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_IRQ_NUM 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_IRQ_LEVEL 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux {813695744 /* 0x30800300 */, 817890048 /* 0x30c00300 */}
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_IDX_0 813695744
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_IDX_1 817890048
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 0) \
	fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 1)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_LEN 2
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength "low"
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_STRING_UNQUOTED low
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_STRING_TOKEN low
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_STRING_UPPER_TOKEN LOW
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_IDX_0 "low"
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_IDX_0_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_ENUM_VAL_low_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, drive_strength, 0)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_LEN 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate "slow"
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_IDX_0 "slow"
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_IDX_0_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_ENUM_VAL_slow_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, slew_rate, 0)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_LEN 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_nxp_passive_filter 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_nxp_passive_filter_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_bias_pull_up 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_bias_pull_down 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_open_drain 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_input_enable 0
#define DT_N_S_pinctrl_S_pinmux_uart2_S_group0_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40038000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40038000
 *
 * Binding (compatible = nxp,kinetis-tpm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nxp,kinetis-tpm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40038000_PATH "/soc/pwm@40038000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40038000_FULL_NAME "pwm@40038000"
#define DT_N_S_soc_S_pwm_40038000_FULL_NAME_UNQUOTED pwm@40038000
#define DT_N_S_soc_S_pwm_40038000_FULL_NAME_TOKEN pwm_40038000
#define DT_N_S_soc_S_pwm_40038000_FULL_NAME_UPPER_TOKEN PWM_40038000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40038000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40038000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40038000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40038000_FOREACH_NODELABEL(fn) fn(tpm0)
#define DT_N_S_soc_S_pwm_40038000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tpm0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40038000_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40038000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40038000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pwm_40038000_HASH 0e4_Kk_UPx_fM0OwxYoUOex__mnbn6XflgNEHpwwOsc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40038000_ORD 39
#define DT_N_S_soc_S_pwm_40038000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40038000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */ \
	35, /* /pinctrl/pinmux_tpm0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40038000_SUPPORTS_ORDS \
	40, /* /pwmleds */ \
	41, /* /pwmleds/pwm_led_0 */ \
	42, /* /pwmleds/pwm_led_1 */ \
	43, /* /pwmleds/pwm_led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40038000_EXISTS 1
#define DT_N_ALIAS_pwm_0            DT_N_S_soc_S_pwm_40038000
#define DT_N_INST_0_nxp_kinetis_tpm DT_N_S_soc_S_pwm_40038000
#define DT_N_NODELABEL_tpm0         DT_N_S_soc_S_pwm_40038000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40038000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40038000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_REG_IDX_0_VAL_ADDRESS 1073971200 /* 0x40038000 */
#define DT_N_S_soc_S_pwm_40038000_REG_IDX_0_VAL_SIZE 136 /* 0x88 */
#define DT_N_S_soc_S_pwm_40038000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40038000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40038000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pwm_40038000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pwm_40038000_COMPAT_MATCHES_nxp_kinetis_tpm 1
#define DT_N_S_soc_S_pwm_40038000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pwm_40038000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_COMPAT_MODEL_IDX_0 "kinetis-tpm"
#define DT_N_S_soc_S_pwm_40038000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_NUM 1
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_pwm_40038000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_S_pinmux_tpm0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40038000_P_reg {1073971200 /* 0x40038000 */, 136 /* 0x88 */}
#define DT_N_S_soc_S_pwm_40038000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_reg_IDX_0 1073971200
#define DT_N_S_soc_S_pwm_40038000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_reg_IDX_1 136
#define DT_N_S_soc_S_pwm_40038000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_interrupts {17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pwm_40038000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_pwm_40038000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pwm_40038000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_S_pinmux_tpm0
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_S_pinmux_tpm0
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_prescaler 16
#define DT_N_S_soc_S_pwm_40038000_P_prescaler_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_pwm_40038000_P_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_prescaler_IDX_0_ENUM_VAL_16_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_prescaler_ENUM_VAL_16_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_status "okay"
#define DT_N_S_soc_S_pwm_40038000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pwm_40038000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pwm_40038000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_40038000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pwm_40038000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_pwm_40038000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40038000, status, 0)
#define DT_N_S_soc_S_pwm_40038000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40038000, status, 0)
#define DT_N_S_soc_S_pwm_40038000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40038000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40038000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40038000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_compatible {"nxp,kinetis-tpm"}
#define DT_N_S_soc_S_pwm_40038000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_compatible_IDX_0 "nxp,kinetis-tpm"
#define DT_N_S_soc_S_pwm_40038000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-tpm
#define DT_N_S_soc_S_pwm_40038000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_tpm
#define DT_N_S_soc_S_pwm_40038000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_TPM
#define DT_N_S_soc_S_pwm_40038000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40038000, compatible, 0)
#define DT_N_S_soc_S_pwm_40038000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40038000, compatible, 0)
#define DT_N_S_soc_S_pwm_40038000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40038000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40038000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40038000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_VAL_name 8
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_VAL_offset 4156
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_VAL_bits 24
#define DT_N_S_soc_S_pwm_40038000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40038000, clocks, 0)
#define DT_N_S_soc_S_pwm_40038000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40038000, clocks, 0)
#define DT_N_S_soc_S_pwm_40038000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40038000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40038000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_clocks_LEN 1
#define DT_N_S_soc_S_pwm_40038000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40038000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40038000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40038000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40038000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_pwm_40038000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"
#define DT_N_S_pwmleds_FULL_NAME_UNQUOTED pwmleds
#define DT_N_S_pwmleds_FULL_NAME_TOKEN pwmleds
#define DT_N_S_pwmleds_FULL_NAME_UPPER_TOKEN PWMLEDS

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_NODELABEL_NUM 0
#define DT_N_S_pwmleds_FOREACH_NODELABEL(fn) 
#define DT_N_S_pwmleds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pwmleds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_CHILD_NUM 3
#define DT_N_S_pwmleds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_pwmleds_S_pwm_led_1) fn(DT_N_S_pwmleds_S_pwm_led_2)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_2)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_2, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_2, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_pwmleds_S_pwm_led_1) fn(DT_N_S_pwmleds_S_pwm_led_2)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_2)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_2, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pwmleds_HASH LAVLDxln4k2d8rWkHY5gWY_V_wbRKRVUOItR1NgXPw4

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 40
#define DT_N_S_pwmleds_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */ \
	39, /* /soc/pwm@40038000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	41, /* /pwmleds/pwm_led_0 */ \
	42, /* /pwmleds/pwm_led_1 */ \
	43, /* /pwmleds/pwm_led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_IRQ_LEVEL 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_P_compatible {"pwm-leds"}
#define DT_N_S_pwmleds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_LEN 1
#define DT_N_S_pwmleds_P_compatible_EXISTS 1
#define DT_N_S_pwmleds_P_status "disabled"
#define DT_N_S_pwmleds_P_status_STRING_UNQUOTED disabled
#define DT_N_S_pwmleds_P_status_STRING_TOKEN disabled
#define DT_N_S_pwmleds_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_pwmleds_P_status_IDX_0 "disabled"
#define DT_N_S_pwmleds_P_status_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_pwmleds_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_pwmleds_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, status, 0)
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, status, 0)
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, status, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, status, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_status_LEN 1
#define DT_N_S_pwmleds_P_status_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_0
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_0_PATH "/pwmleds/pwm_led_0"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME "pwm_led_0"
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME_UNQUOTED pwm_led_0
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME_TOKEN pwm_led_0
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME_UPPER_TOKEN PWM_LED_0

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_0_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_0_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_NODELABEL(fn) fn(red_pwm_led)
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pwmleds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pwmleds_S_pwm_led_0_HASH 9AazpJGoUz9iIo_1AZ3WD6yneQZjjssfQisq6_rbYq0

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_0_ORD 41
#define DT_N_S_pwmleds_S_pwm_led_0_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_0_REQUIRES_ORDS \
	39, /* /soc/pwm@40038000 */ \
	40, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_0_EXISTS 1
#define DT_N_ALIAS_pwm_led0        DT_N_S_pwmleds_S_pwm_led_0
#define DT_N_ALIAS_red_pwm_led     DT_N_S_pwmleds_S_pwm_led_0
#define DT_N_NODELABEL_red_pwm_led DT_N_S_pwmleds_S_pwm_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_0_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40038000
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel 4
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_flags 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_label "PWM Red LED"
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_STRING_UNQUOTED PWM Red LED
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_STRING_TOKEN PWM_Red_LED
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_STRING_UPPER_TOKEN PWM_RED_LED
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_IDX_0 "PWM Red LED"
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_0, label, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0, label, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_1
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_1_PATH "/pwmleds/pwm_led_1"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_1_FULL_NAME "pwm_led_1"
#define DT_N_S_pwmleds_S_pwm_led_1_FULL_NAME_UNQUOTED pwm_led_1
#define DT_N_S_pwmleds_S_pwm_led_1_FULL_NAME_TOKEN pwm_led_1
#define DT_N_S_pwmleds_S_pwm_led_1_FULL_NAME_UPPER_TOKEN PWM_LED_1

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_1_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_1_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_NODELABEL(fn) fn(green_pwm_led)
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pwmleds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_1_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pwmleds_S_pwm_led_1_HASH FYKejvW68F22IO8b1tJZyHZD5siC5mQNNQwGnObhjZU

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_1_ORD 42
#define DT_N_S_pwmleds_S_pwm_led_1_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_1_REQUIRES_ORDS \
	39, /* /soc/pwm@40038000 */ \
	40, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_1_EXISTS 1
#define DT_N_ALIAS_pwm_led1          DT_N_S_pwmleds_S_pwm_led_1
#define DT_N_ALIAS_green_pwm_led     DT_N_S_pwmleds_S_pwm_led_1
#define DT_N_NODELABEL_green_pwm_led DT_N_S_pwmleds_S_pwm_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_1_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_1_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_1_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_1_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40038000
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_VAL_channel 5
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_VAL_flags 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_1, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_1, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_1, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_1, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_label "PWM Green LED"
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_STRING_UNQUOTED PWM Green LED
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_STRING_TOKEN PWM_Green_LED
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_STRING_UPPER_TOKEN PWM_GREEN_LED
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_IDX_0 "PWM Green LED"
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_1, label, 0)
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_1, label, 0)
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_2
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_2_PATH "/pwmleds/pwm_led_2"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_2_FULL_NAME "pwm_led_2"
#define DT_N_S_pwmleds_S_pwm_led_2_FULL_NAME_UNQUOTED pwm_led_2
#define DT_N_S_pwmleds_S_pwm_led_2_FULL_NAME_TOKEN pwm_led_2
#define DT_N_S_pwmleds_S_pwm_led_2_FULL_NAME_UPPER_TOKEN PWM_LED_2

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_2_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_2_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_NODELABEL(fn) fn(blue_pwm_led)
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(blue_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pwmleds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_2_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pwmleds_S_pwm_led_2_HASH 2rJeI7gCoA4XTTOLj0tRzLYc3gUaA7UCjnABuKYBml0

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_2_ORD 43
#define DT_N_S_pwmleds_S_pwm_led_2_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_2_REQUIRES_ORDS \
	39, /* /soc/pwm@40038000 */ \
	40, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_2_EXISTS 1
#define DT_N_ALIAS_pwm_led2         DT_N_S_pwmleds_S_pwm_led_2
#define DT_N_ALIAS_blue_pwm_led     DT_N_S_pwmleds_S_pwm_led_2
#define DT_N_NODELABEL_blue_pwm_led DT_N_S_pwmleds_S_pwm_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_2_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_2_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_2_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_2_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40038000
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_VAL_channel 2
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_VAL_flags 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_2, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_2, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_2, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_2, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_label "PWM Blue LED"
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_STRING_UNQUOTED PWM Blue LED
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_STRING_TOKEN PWM_Blue_LED
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_STRING_UPPER_TOKEN PWM_BLUE_LED
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_IDX_0 "PWM Blue LED"
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_2, label, 0)
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_2, label, 0)
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@4004a000
 *
 * Node identifier: DT_N_S_soc_S_pinmux_4004a000
 *
 * Binding (compatible = nxp,port-pinmux):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nxp,port-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_4004a000_PATH "/soc/pinmux@4004a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_4004a000_FULL_NAME "pinmux@4004a000"
#define DT_N_S_soc_S_pinmux_4004a000_FULL_NAME_UNQUOTED pinmux@4004a000
#define DT_N_S_soc_S_pinmux_4004a000_FULL_NAME_TOKEN pinmux_4004a000
#define DT_N_S_soc_S_pinmux_4004a000_FULL_NAME_UPPER_TOKEN PINMUX_4004A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_4004a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_4004a000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_4004a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_NODELABEL(fn) fn(portb)
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(portb, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_4004a000_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_4004a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_4004a000_HASH j1cAOJulnao23mK1Qd2xxBQZJS2AKP0fjqj603DSkFE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_4004a000_ORD 44
#define DT_N_S_soc_S_pinmux_4004a000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_4004a000_REQUIRES_ORDS \
	4, /* /soc */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_4004a000_SUPPORTS_ORDS \
	45, /* /soc/gpio@400ff040 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_4004a000_EXISTS 1
#define DT_N_INST_1_nxp_port_pinmux DT_N_S_soc_S_pinmux_4004a000
#define DT_N_NODELABEL_portb        DT_N_S_soc_S_pinmux_4004a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_4004a000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_4004a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_REG_IDX_0_VAL_ADDRESS 1074044928 /* 0x4004a000 */
#define DT_N_S_soc_S_pinmux_4004a000_REG_IDX_0_VAL_SIZE 208 /* 0xd0 */
#define DT_N_S_soc_S_pinmux_4004a000_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_4004a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_4004a000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_4004a000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_4004a000_COMPAT_MATCHES_nxp_port_pinmux 1
#define DT_N_S_soc_S_pinmux_4004a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pinmux_4004a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_COMPAT_MODEL_IDX_0 "port-pinmux"
#define DT_N_S_soc_S_pinmux_4004a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_4004a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_4004a000_P_reg {1074044928 /* 0x4004a000 */, 208 /* 0xd0 */}
#define DT_N_S_soc_S_pinmux_4004a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_reg_IDX_0 1074044928
#define DT_N_S_soc_S_pinmux_4004a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_reg_IDX_1 208
#define DT_N_S_soc_S_pinmux_4004a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_VAL_bits 10
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004a000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004a000, clocks, 0)
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_LEN 1
#define DT_N_S_soc_S_pinmux_4004a000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible {"nxp,port-pinmux"}
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_IDX_0 "nxp,port-pinmux"
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_IDX_0_STRING_UNQUOTED nxp,port-pinmux
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_IDX_0_STRING_TOKEN nxp_port_pinmux
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PORT_PINMUX
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_4004a000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_4004a000, compatible, 0)
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_4004a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_4004a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_4004a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_4004a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_4004a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_4004a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_4004a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400ff040
 *
 * Node identifier: DT_N_S_soc_S_gpio_400ff040
 *
 * Binding (compatible = nxp,kinetis-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nxp,kinetis-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400ff040_PATH "/soc/gpio@400ff040"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400ff040_FULL_NAME "gpio@400ff040"
#define DT_N_S_soc_S_gpio_400ff040_FULL_NAME_UNQUOTED gpio@400ff040
#define DT_N_S_soc_S_gpio_400ff040_FULL_NAME_TOKEN gpio_400ff040
#define DT_N_S_soc_S_gpio_400ff040_FULL_NAME_UPPER_TOKEN GPIO_400FF040

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400ff040_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400ff040_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400ff040_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400ff040_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400ff040_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_400ff040_HASH rbgXLrxYmalb7GUF7miPtpupeicajXyp47FlEFB8Fr4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400ff040_ORD 45
#define DT_N_S_soc_S_gpio_400ff040_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400ff040_REQUIRES_ORDS \
	4, /* /soc */ \
	44, /* /soc/pinmux@4004a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400ff040_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400ff040_EXISTS 1
#define DT_N_INST_1_nxp_kinetis_gpio DT_N_S_soc_S_gpio_400ff040
#define DT_N_NODELABEL_gpiob         DT_N_S_soc_S_gpio_400ff040

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400ff040_REG_NUM 1
#define DT_N_S_soc_S_gpio_400ff040_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_REG_IDX_0_VAL_ADDRESS 1074786368 /* 0x400ff040 */
#define DT_N_S_soc_S_gpio_400ff040_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_gpio_400ff040_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400ff040_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400ff040_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_400ff040_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_400ff040_COMPAT_MATCHES_nxp_kinetis_gpio 1
#define DT_N_S_soc_S_gpio_400ff040_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_400ff040_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_COMPAT_MODEL_IDX_0 "kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff040_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400ff040_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400ff040_P_reg {1074786368 /* 0x400ff040 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_gpio_400ff040_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_reg_IDX_0 1074786368
#define DT_N_S_soc_S_gpio_400ff040_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_reg_IDX_1 64
#define DT_N_S_soc_S_gpio_400ff040_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port DT_N_S_soc_S_pinmux_4004a000
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_IDX_0 DT_N_S_soc_S_pinmux_4004a000
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_IDX_0_PH DT_N_S_soc_S_pinmux_4004a000
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff040, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff040, nxp_kinetis_port, 0)
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff040, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff040, nxp_kinetis_port, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_LEN 1
#define DT_N_S_soc_S_gpio_400ff040_P_nxp_kinetis_port_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_gpio_port_offest 0
#define DT_N_S_soc_S_gpio_400ff040_P_gpio_port_offest_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400ff040_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_ngpios 32
#define DT_N_S_soc_S_gpio_400ff040_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_status "okay"
#define DT_N_S_soc_S_gpio_400ff040_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_400ff040_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_400ff040_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_400ff040_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_400ff040_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_400ff040_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff040, status, 0)
#define DT_N_S_soc_S_gpio_400ff040_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff040, status, 0)
#define DT_N_S_soc_S_gpio_400ff040_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400ff040_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_compatible {"nxp,kinetis-gpio"}
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_IDX_0 "nxp,kinetis-gpio"
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-gpio
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_gpio
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_GPIO
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400ff040, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400ff040, compatible, 0)
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400ff040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400ff040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400ff040_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400ff040_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400ff040_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400ff040_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400ff040_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40067000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40067000
 *
 * Binding (compatible = nxp,kinetis-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\nxp,kinetis-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40067000_PATH "/soc/i2c@40067000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40067000_FULL_NAME "i2c@40067000"
#define DT_N_S_soc_S_i2c_40067000_FULL_NAME_UNQUOTED i2c@40067000
#define DT_N_S_soc_S_i2c_40067000_FULL_NAME_TOKEN i2c_40067000
#define DT_N_S_soc_S_i2c_40067000_FULL_NAME_UPPER_TOKEN I2C_40067000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40067000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40067000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40067000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40067000_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c_40067000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40067000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40067000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40067000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40067000_HASH 5LeJQj2RH_tj2YU9P9El4tjSVKlnC_W5C0aG1S2rG6Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40067000_ORD 46
#define DT_N_S_soc_S_i2c_40067000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40067000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40067000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40067000_EXISTS 1
#define DT_N_INST_1_nxp_kinetis_i2c DT_N_S_soc_S_i2c_40067000
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40067000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40067000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40067000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_REG_IDX_0_VAL_ADDRESS 1074163712 /* 0x40067000 */
#define DT_N_S_soc_S_i2c_40067000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40067000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40067000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40067000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40067000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40067000_COMPAT_MATCHES_nxp_kinetis_i2c 1
#define DT_N_S_soc_S_i2c_40067000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40067000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_COMPAT_MODEL_IDX_0 "kinetis-i2c"
#define DT_N_S_soc_S_i2c_40067000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40067000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40067000_P_reg {1074163712 /* 0x40067000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40067000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_reg_IDX_0 1074163712
#define DT_N_S_soc_S_i2c_40067000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40067000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_interrupts {9 /* 0x9 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40067000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_i2c_40067000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40067000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40067000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40067000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40067000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40067000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40067000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40067000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40067000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40067000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40067000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40067000, status, 0)
#define DT_N_S_soc_S_i2c_40067000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40067000, status, 0)
#define DT_N_S_soc_S_i2c_40067000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40067000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40067000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40067000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_compatible {"nxp,kinetis-i2c"}
#define DT_N_S_soc_S_i2c_40067000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_compatible_IDX_0 "nxp,kinetis-i2c"
#define DT_N_S_soc_S_i2c_40067000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-i2c
#define DT_N_S_soc_S_i2c_40067000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_i2c
#define DT_N_S_soc_S_i2c_40067000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_I2C
#define DT_N_S_soc_S_i2c_40067000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40067000, compatible, 0)
#define DT_N_S_soc_S_i2c_40067000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40067000, compatible, 0)
#define DT_N_S_soc_S_i2c_40067000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40067000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40067000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40067000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_VAL_offset 4148
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_VAL_bits 7
#define DT_N_S_soc_S_i2c_40067000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40067000, clocks, 0)
#define DT_N_S_soc_S_i2c_40067000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40067000, clocks, 0)
#define DT_N_S_soc_S_i2c_40067000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40067000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40067000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40067000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40067000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40067000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40067000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40067000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40067000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/lptmr@40040000
 *
 * Node identifier: DT_N_S_soc_S_lptmr_40040000
 *
 * Binding (compatible = nxp,lptmr):
 *   $ZEPHYR_BASE\dts\bindings\counter\nxp,lptmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_lptmr_40040000_PATH "/soc/lptmr@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_lptmr_40040000_FULL_NAME "lptmr@40040000"
#define DT_N_S_soc_S_lptmr_40040000_FULL_NAME_UNQUOTED lptmr@40040000
#define DT_N_S_soc_S_lptmr_40040000_FULL_NAME_TOKEN lptmr_40040000
#define DT_N_S_soc_S_lptmr_40040000_FULL_NAME_UPPER_TOKEN LPTMR_40040000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_lptmr_40040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_lptmr_40040000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_lptmr_40040000_NODELABEL_NUM 1
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_NODELABEL(fn) fn(lptmr0)
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptmr0, __VA_ARGS__)
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_lptmr_40040000_CHILD_NUM 0
#define DT_N_S_soc_S_lptmr_40040000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_lptmr_40040000_HASH UOEmhJR7los1NS7RuySQXcjz9miB7fAW8k7BIk6y_zc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_lptmr_40040000_ORD 47
#define DT_N_S_soc_S_lptmr_40040000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_lptmr_40040000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_lptmr_40040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_lptmr_40040000_EXISTS 1
#define DT_N_INST_0_nxp_lptmr DT_N_S_soc_S_lptmr_40040000
#define DT_N_NODELABEL_lptmr0 DT_N_S_soc_S_lptmr_40040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_lptmr_40040000_REG_NUM 1
#define DT_N_S_soc_S_lptmr_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_lptmr_40040000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_lptmr_40040000_RANGES_NUM 0
#define DT_N_S_soc_S_lptmr_40040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_lptmr_40040000_IRQ_NUM 1
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_lptmr_40040000_IRQ_LEVEL 1
#define DT_N_S_soc_S_lptmr_40040000_COMPAT_MATCHES_nxp_lptmr 1
#define DT_N_S_soc_S_lptmr_40040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_lptmr_40040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_COMPAT_MODEL_IDX_0 "lptmr"
#define DT_N_S_soc_S_lptmr_40040000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_lptmr_40040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_lptmr_40040000_P_reg {1074003968 /* 0x40040000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_lptmr_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_lptmr_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_lptmr_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_clock_frequency 1000
#define DT_N_S_soc_S_lptmr_40040000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescaler 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_clk_source 1
#define DT_N_S_soc_S_lptmr_40040000_P_clk_source_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_lptmr_40040000_P_clk_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_clk_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_clk_source_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_active_low 0
#define DT_N_S_soc_S_lptmr_40040000_P_active_low_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_resolution 16
#define DT_N_S_soc_S_lptmr_40040000_P_resolution_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescale_glitch_filter 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescale_glitch_filter_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_lptmr_40040000_P_prescale_glitch_filter_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescale_glitch_filter_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescale_glitch_filter_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_prescale_glitch_filter_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_timer_mode_sel 0
#define DT_N_S_soc_S_lptmr_40040000_P_timer_mode_sel_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_lptmr_40040000_P_timer_mode_sel_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_timer_mode_sel_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_timer_mode_sel_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_timer_mode_sel_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_lptmr_40040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_lptmr_40040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_lptmr_40040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_status "okay"
#define DT_N_S_soc_S_lptmr_40040000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_lptmr_40040000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_lptmr_40040000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_lptmr_40040000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_lptmr_40040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_lptmr_40040000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lptmr_40040000, status, 0)
#define DT_N_S_soc_S_lptmr_40040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lptmr_40040000, status, 0)
#define DT_N_S_soc_S_lptmr_40040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lptmr_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lptmr_40040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lptmr_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lptmr_40040000_P_status_LEN 1
#define DT_N_S_soc_S_lptmr_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_compatible {"nxp,lptmr"}
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_IDX_0 "nxp,lptmr"
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_IDX_0_STRING_UNQUOTED nxp,lptmr
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_IDX_0_STRING_TOKEN nxp_lptmr
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_LPTMR
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lptmr_40040000, compatible, 0)
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lptmr_40040000, compatible, 0)
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lptmr_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lptmr_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_LEN 1
#define DT_N_S_soc_S_lptmr_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_lptmr_40040000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_wakeup_source 0
#define DT_N_S_soc_S_lptmr_40040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_lptmr_40040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_lptmr_40040000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40039000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40039000
 *
 * Binding (compatible = nxp,kinetis-tpm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nxp,kinetis-tpm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40039000_PATH "/soc/pwm@40039000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40039000_FULL_NAME "pwm@40039000"
#define DT_N_S_soc_S_pwm_40039000_FULL_NAME_UNQUOTED pwm@40039000
#define DT_N_S_soc_S_pwm_40039000_FULL_NAME_TOKEN pwm_40039000
#define DT_N_S_soc_S_pwm_40039000_FULL_NAME_UPPER_TOKEN PWM_40039000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40039000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40039000_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40039000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40039000_FOREACH_NODELABEL(fn) fn(tpm1)
#define DT_N_S_soc_S_pwm_40039000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tpm1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40039000_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40039000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40039000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pwm_40039000_HASH xT2zXmLKXtviIvysuweKeXlziC5_PyZbXAXpA8k6RnE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40039000_ORD 48
#define DT_N_S_soc_S_pwm_40039000_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40039000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40039000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40039000_EXISTS 1
#define DT_N_INST_1_nxp_kinetis_tpm DT_N_S_soc_S_pwm_40039000
#define DT_N_NODELABEL_tpm1         DT_N_S_soc_S_pwm_40039000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40039000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40039000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_REG_IDX_0_VAL_ADDRESS 1073975296 /* 0x40039000 */
#define DT_N_S_soc_S_pwm_40039000_REG_IDX_0_VAL_SIZE 136 /* 0x88 */
#define DT_N_S_soc_S_pwm_40039000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40039000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40039000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pwm_40039000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pwm_40039000_COMPAT_MATCHES_nxp_kinetis_tpm 1
#define DT_N_S_soc_S_pwm_40039000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pwm_40039000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_COMPAT_MODEL_IDX_0 "kinetis-tpm"
#define DT_N_S_soc_S_pwm_40039000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40039000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40039000_P_reg {1073975296 /* 0x40039000 */, 136 /* 0x88 */}
#define DT_N_S_soc_S_pwm_40039000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_reg_IDX_0 1073975296
#define DT_N_S_soc_S_pwm_40039000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_reg_IDX_1 136
#define DT_N_S_soc_S_pwm_40039000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pwm_40039000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_pwm_40039000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pwm_40039000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_prescaler 16
#define DT_N_S_soc_S_pwm_40039000_P_prescaler_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_pwm_40039000_P_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_prescaler_IDX_0_ENUM_VAL_16_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_prescaler_ENUM_VAL_16_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40039000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40039000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40039000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40039000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40039000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40039000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40039000, status, 0)
#define DT_N_S_soc_S_pwm_40039000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40039000, status, 0)
#define DT_N_S_soc_S_pwm_40039000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40039000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40039000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40039000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_compatible {"nxp,kinetis-tpm"}
#define DT_N_S_soc_S_pwm_40039000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_compatible_IDX_0 "nxp,kinetis-tpm"
#define DT_N_S_soc_S_pwm_40039000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-tpm
#define DT_N_S_soc_S_pwm_40039000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_tpm
#define DT_N_S_soc_S_pwm_40039000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_TPM
#define DT_N_S_soc_S_pwm_40039000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40039000, compatible, 0)
#define DT_N_S_soc_S_pwm_40039000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40039000, compatible, 0)
#define DT_N_S_soc_S_pwm_40039000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40039000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40039000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40039000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_VAL_name 18
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_VAL_offset 4156
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_VAL_bits 25
#define DT_N_S_soc_S_pwm_40039000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40039000, clocks, 0)
#define DT_N_S_soc_S_pwm_40039000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40039000, clocks, 0)
#define DT_N_S_soc_S_pwm_40039000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40039000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40039000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40039000_P_clocks_LEN 1
#define DT_N_S_soc_S_pwm_40039000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40039000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40039000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40039000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40039000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4003a000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4003a000
 *
 * Binding (compatible = nxp,kinetis-tpm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nxp,kinetis-tpm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4003a000_PATH "/soc/pwm@4003a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4003a000_FULL_NAME "pwm@4003a000"
#define DT_N_S_soc_S_pwm_4003a000_FULL_NAME_UNQUOTED pwm@4003a000
#define DT_N_S_soc_S_pwm_4003a000_FULL_NAME_TOKEN pwm_4003a000
#define DT_N_S_soc_S_pwm_4003a000_FULL_NAME_UPPER_TOKEN PWM_4003A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4003a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4003a000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_4003a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_NODELABEL(fn) fn(tpm2)
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tpm2, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4003a000_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_4003a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pwm_4003a000_HASH SYdVlrCUGbrvdAyTdO4qpCJnKxwDAm4MSR9VMhLYVMw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4003a000_ORD 49
#define DT_N_S_soc_S_pwm_4003a000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4003a000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4003a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4003a000_EXISTS 1
#define DT_N_INST_2_nxp_kinetis_tpm DT_N_S_soc_S_pwm_4003a000
#define DT_N_NODELABEL_tpm2         DT_N_S_soc_S_pwm_4003a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4003a000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4003a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_REG_IDX_0_VAL_ADDRESS 1073979392 /* 0x4003a000 */
#define DT_N_S_soc_S_pwm_4003a000_REG_IDX_0_VAL_SIZE 136 /* 0x88 */
#define DT_N_S_soc_S_pwm_4003a000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4003a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4003a000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pwm_4003a000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pwm_4003a000_COMPAT_MATCHES_nxp_kinetis_tpm 1
#define DT_N_S_soc_S_pwm_4003a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pwm_4003a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_COMPAT_MODEL_IDX_0 "kinetis-tpm"
#define DT_N_S_soc_S_pwm_4003a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4003a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4003a000_P_reg {1073979392 /* 0x4003a000 */, 136 /* 0x88 */}
#define DT_N_S_soc_S_pwm_4003a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_reg_IDX_0 1073979392
#define DT_N_S_soc_S_pwm_4003a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_reg_IDX_1 136
#define DT_N_S_soc_S_pwm_4003a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pwm_4003a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_pwm_4003a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pwm_4003a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_prescaler 16
#define DT_N_S_soc_S_pwm_4003a000_P_prescaler_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_pwm_4003a000_P_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_prescaler_IDX_0_ENUM_VAL_16_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_prescaler_ENUM_VAL_16_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4003a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_4003a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4003a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4003a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_4003a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4003a000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4003a000, status, 0)
#define DT_N_S_soc_S_pwm_4003a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4003a000, status, 0)
#define DT_N_S_soc_S_pwm_4003a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4003a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4003a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4003a000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_compatible {"nxp,kinetis-tpm"}
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_IDX_0 "nxp,kinetis-tpm"
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-tpm
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_tpm
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_TPM
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4003a000, compatible, 0)
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4003a000, compatible, 0)
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4003a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4003a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4003a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_VAL_name 18
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_VAL_offset 4156
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_VAL_bits 26
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4003a000, clocks, 0)
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4003a000, clocks, 0)
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4003a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4003a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_LEN 1
#define DT_N_S_soc_S_pwm_4003a000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_4003a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4003a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4003a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4003a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@4003d000
 *
 * Node identifier: DT_N_S_soc_S_rtc_4003d000
 *
 * Binding (compatible = nxp,rtc):
 *   $ZEPHYR_BASE\dts\bindings\rtc\nxp,rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_4003d000_PATH "/soc/rtc@4003d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_4003d000_FULL_NAME "rtc@4003d000"
#define DT_N_S_soc_S_rtc_4003d000_FULL_NAME_UNQUOTED rtc@4003d000
#define DT_N_S_soc_S_rtc_4003d000_FULL_NAME_TOKEN rtc_4003d000
#define DT_N_S_soc_S_rtc_4003d000_FULL_NAME_UPPER_TOKEN RTC_4003D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_4003d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_4003d000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_4003d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_4003d000_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_4003d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_4003d000_HASH djbghvosI6kJsq8QmkE3pi40vJJ9TJkQAR4jenwYsJg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_4003d000_ORD 50
#define DT_N_S_soc_S_rtc_4003d000_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_4003d000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_4003d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_4003d000_EXISTS 1
#define DT_N_INST_0_nxp_rtc DT_N_S_soc_S_rtc_4003d000
#define DT_N_NODELABEL_rtc  DT_N_S_soc_S_rtc_4003d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_4003d000_REG_NUM 1
#define DT_N_S_soc_S_rtc_4003d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_REG_IDX_0_VAL_ADDRESS 1073991680 /* 0x4003d000 */
#define DT_N_S_soc_S_rtc_4003d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_4003d000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_4003d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NUM 2
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_VAL_irq 21
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_4003d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_alarm_VAL_irq DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_alarm_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_alarm_VAL_priority DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_alarm_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_alarm_CONTROLLER DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_seconds_VAL_irq DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_seconds_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_seconds_VAL_priority DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_seconds_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_IRQ_NAME_seconds_CONTROLLER DT_N_S_soc_S_rtc_4003d000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_rtc_4003d000_COMPAT_MATCHES_nxp_rtc 1
#define DT_N_S_soc_S_rtc_4003d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_rtc_4003d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_COMPAT_MODEL_IDX_0 "rtc"
#define DT_N_S_soc_S_rtc_4003d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_4003d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_4003d000_P_reg {1073991680 /* 0x4003d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_4003d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_reg_IDX_0 1073991680
#define DT_N_S_soc_S_rtc_4003d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_4003d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source "RTC"
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_STRING_UNQUOTED RTC
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_STRING_TOKEN RTC
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_STRING_UPPER_TOKEN RTC
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_IDX_0 "RTC"
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_IDX_0_ENUM_VAL_rtc_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_ENUM_VAL_rtc_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4003d000, clock_source, 0)
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4003d000, clock_source, 0)
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4003d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4003d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_LEN 1
#define DT_N_S_soc_S_rtc_4003d000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_4003d000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_2 21
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_rtc_4003d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_prescaler 32768
#define DT_N_S_soc_S_rtc_4003d000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_status "okay"
#define DT_N_S_soc_S_rtc_4003d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_4003d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_4003d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_4003d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_4003d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_4003d000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4003d000, status, 0)
#define DT_N_S_soc_S_rtc_4003d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4003d000, status, 0)
#define DT_N_S_soc_S_rtc_4003d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4003d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4003d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_4003d000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_compatible {"nxp,rtc"}
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_IDX_0 "nxp,rtc"
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_IDX_0_STRING_UNQUOTED nxp,rtc
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_IDX_0_STRING_TOKEN nxp_rtc
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_RTC
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4003d000, compatible, 0)
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4003d000, compatible, 0)
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4003d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4003d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_4003d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names {"alarm", "seconds"}
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_0 "alarm"
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_0_STRING_UNQUOTED alarm
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_0_STRING_TOKEN alarm
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN ALARM
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_1 "seconds"
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_1_STRING_UNQUOTED seconds
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_1_STRING_TOKEN seconds
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN SECONDS
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 1)
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 1)
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_4003d000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_rtc_4003d000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_4003d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_4003d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_4003d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_4003d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv6m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv6m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 51
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv6m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv6m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv6m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv6m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv6m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV6M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40054000
 *
 * Node identifier: DT_N_S_soc_S_uart_40054000
 *
 * Binding (compatible = nxp,lpuart):
 *   $ZEPHYR_BASE\dts\bindings\serial\nxp,lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40054000_PATH "/soc/uart@40054000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40054000_FULL_NAME "uart@40054000"
#define DT_N_S_soc_S_uart_40054000_FULL_NAME_UNQUOTED uart@40054000
#define DT_N_S_soc_S_uart_40054000_FULL_NAME_TOKEN uart_40054000
#define DT_N_S_soc_S_uart_40054000_FULL_NAME_UPPER_TOKEN UART_40054000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40054000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40054000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40054000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_40054000_FOREACH_NODELABEL(fn) fn(lpuart0)
#define DT_N_S_soc_S_uart_40054000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lpuart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40054000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40054000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40054000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_40054000_HASH no3KzFL0bI_6ORVWyDB40FuGy7ZAlpTpswfbGuFPnUc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40054000_ORD 52
#define DT_N_S_soc_S_uart_40054000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40054000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */ \
	33, /* /pinctrl/pinmux_lpuart0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40054000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40054000_EXISTS 1
#define DT_N_INST_0_nxp_lpuart DT_N_S_soc_S_uart_40054000
#define DT_N_NODELABEL_lpuart0 DT_N_S_soc_S_uart_40054000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40054000_REG_NUM 1
#define DT_N_S_soc_S_uart_40054000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_REG_IDX_0_VAL_ADDRESS 1074085888 /* 0x40054000 */
#define DT_N_S_soc_S_uart_40054000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40054000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40054000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40054000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_40054000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40054000_COMPAT_MATCHES_nxp_lpuart 1
#define DT_N_S_soc_S_uart_40054000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40054000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_COMPAT_MODEL_IDX_0 "lpuart"
#define DT_N_S_soc_S_uart_40054000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40054000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_40054000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40054000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40054000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40054000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_S_pinmux_lpuart0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40054000_P_reg {1074085888 /* 0x40054000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40054000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_reg_IDX_0 1074085888
#define DT_N_S_soc_S_uart_40054000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40054000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40054000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_single_wire 0
#define DT_N_S_soc_S_uart_40054000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40054000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40054000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40054000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40054000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_parity "none"
#define DT_N_S_soc_S_uart_40054000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_40054000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_40054000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_40054000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_40054000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_40054000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40054000, parity, 0)
#define DT_N_S_soc_S_uart_40054000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40054000, parity, 0)
#define DT_N_S_soc_S_uart_40054000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40054000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40054000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_40054000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_status "okay"
#define DT_N_S_soc_S_uart_40054000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40054000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40054000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40054000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40054000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40054000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40054000, status, 0)
#define DT_N_S_soc_S_uart_40054000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40054000, status, 0)
#define DT_N_S_soc_S_uart_40054000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40054000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40054000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40054000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_compatible {"nxp,lpuart"}
#define DT_N_S_soc_S_uart_40054000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_compatible_IDX_0 "nxp,lpuart"
#define DT_N_S_soc_S_uart_40054000_P_compatible_IDX_0_STRING_UNQUOTED nxp,lpuart
#define DT_N_S_soc_S_uart_40054000_P_compatible_IDX_0_STRING_TOKEN nxp_lpuart
#define DT_N_S_soc_S_uart_40054000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_LPUART
#define DT_N_S_soc_S_uart_40054000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40054000, compatible, 0)
#define DT_N_S_soc_S_uart_40054000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40054000, compatible, 0)
#define DT_N_S_soc_S_uart_40054000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40054000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40054000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40054000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_interrupts {12 /* 0xc */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40054000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_uart_40054000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40054000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_VAL_name 18
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_VAL_bits 20
#define DT_N_S_soc_S_uart_40054000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40054000, clocks, 0)
#define DT_N_S_soc_S_uart_40054000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40054000, clocks, 0)
#define DT_N_S_soc_S_uart_40054000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40054000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40054000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40054000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40054000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40054000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40054000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_tx_invert 0
#define DT_N_S_soc_S_uart_40054000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_rx_invert 0
#define DT_N_S_soc_S_uart_40054000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_S_pinmux_lpuart0
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_S_pinmux_lpuart0
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40054000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40054000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40054000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40054000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40054000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40054000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40054000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40054000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_40054000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/uart@40055000
 *
 * Node identifier: DT_N_S_soc_S_uart_40055000
 *
 * Binding (compatible = nxp,lpuart):
 *   $ZEPHYR_BASE\dts\bindings\serial\nxp,lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40055000_PATH "/soc/uart@40055000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40055000_FULL_NAME "uart@40055000"
#define DT_N_S_soc_S_uart_40055000_FULL_NAME_UNQUOTED uart@40055000
#define DT_N_S_soc_S_uart_40055000_FULL_NAME_TOKEN uart_40055000
#define DT_N_S_soc_S_uart_40055000_FULL_NAME_UPPER_TOKEN UART_40055000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40055000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40055000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40055000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_40055000_FOREACH_NODELABEL(fn) fn(lpuart1)
#define DT_N_S_soc_S_uart_40055000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lpuart1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40055000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40055000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40055000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_40055000_HASH 7hXYQXy5u8CFQqv21fnizrcI7Xg6JBXm6TgYSi_4HOI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40055000_ORD 53
#define DT_N_S_soc_S_uart_40055000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40055000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40055000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40055000_EXISTS 1
#define DT_N_INST_1_nxp_lpuart DT_N_S_soc_S_uart_40055000
#define DT_N_NODELABEL_lpuart1 DT_N_S_soc_S_uart_40055000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40055000_REG_NUM 1
#define DT_N_S_soc_S_uart_40055000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_REG_IDX_0_VAL_ADDRESS 1074089984 /* 0x40055000 */
#define DT_N_S_soc_S_uart_40055000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40055000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40055000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40055000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_40055000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40055000_COMPAT_MATCHES_nxp_lpuart 1
#define DT_N_S_soc_S_uart_40055000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40055000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_COMPAT_MODEL_IDX_0 "lpuart"
#define DT_N_S_soc_S_uart_40055000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40055000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40055000_P_reg {1074089984 /* 0x40055000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40055000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_reg_IDX_0 1074089984
#define DT_N_S_soc_S_uart_40055000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40055000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40055000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_single_wire 0
#define DT_N_S_soc_S_uart_40055000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40055000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40055000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40055000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_parity "none"
#define DT_N_S_soc_S_uart_40055000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_40055000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_40055000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_40055000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_40055000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_40055000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40055000, parity, 0)
#define DT_N_S_soc_S_uart_40055000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40055000, parity, 0)
#define DT_N_S_soc_S_uart_40055000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40055000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40055000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_40055000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_status "disabled"
#define DT_N_S_soc_S_uart_40055000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40055000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40055000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40055000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40055000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40055000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40055000, status, 0)
#define DT_N_S_soc_S_uart_40055000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40055000, status, 0)
#define DT_N_S_soc_S_uart_40055000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40055000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40055000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40055000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_compatible {"nxp,lpuart"}
#define DT_N_S_soc_S_uart_40055000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_compatible_IDX_0 "nxp,lpuart"
#define DT_N_S_soc_S_uart_40055000_P_compatible_IDX_0_STRING_UNQUOTED nxp,lpuart
#define DT_N_S_soc_S_uart_40055000_P_compatible_IDX_0_STRING_TOKEN nxp_lpuart
#define DT_N_S_soc_S_uart_40055000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_LPUART
#define DT_N_S_soc_S_uart_40055000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40055000, compatible, 0)
#define DT_N_S_soc_S_uart_40055000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40055000, compatible, 0)
#define DT_N_S_soc_S_uart_40055000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40055000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40055000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40055000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_interrupts {13 /* 0xd */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40055000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_uart_40055000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40055000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_VAL_name 18
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_VAL_offset 4152
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_VAL_bits 21
#define DT_N_S_soc_S_uart_40055000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40055000, clocks, 0)
#define DT_N_S_soc_S_uart_40055000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40055000, clocks, 0)
#define DT_N_S_soc_S_uart_40055000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40055000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40055000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40055000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40055000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40055000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40055000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40055000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_tx_invert 0
#define DT_N_S_soc_S_uart_40055000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_40055000_P_rx_invert 0
#define DT_N_S_soc_S_uart_40055000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/uart@4006c000
 *
 * Node identifier: DT_N_S_soc_S_uart_4006c000
 *
 * Binding (compatible = nxp,kinetis-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\nxp,kinetis-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_4006c000_PATH "/soc/uart@4006c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_4006c000_FULL_NAME "uart@4006c000"
#define DT_N_S_soc_S_uart_4006c000_FULL_NAME_UNQUOTED uart@4006c000
#define DT_N_S_soc_S_uart_4006c000_FULL_NAME_TOKEN uart_4006c000
#define DT_N_S_soc_S_uart_4006c000_FULL_NAME_UPPER_TOKEN UART_4006C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_4006c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_4006c000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_4006c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_4006c000_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_soc_S_uart_4006c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_4006c000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_4006c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4006c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_4006c000_HASH xY40hELVkW379qSQ0JAD3G0WM6w9fL_AbY5L5aNGDCw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_4006c000_ORD 54
#define DT_N_S_soc_S_uart_4006c000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_4006c000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */ \
	37, /* /pinctrl/pinmux_uart2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_4006c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_4006c000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_uart DT_N_S_soc_S_uart_4006c000
#define DT_N_NODELABEL_uart2         DT_N_S_soc_S_uart_4006c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_4006c000_REG_NUM 1
#define DT_N_S_soc_S_uart_4006c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_REG_IDX_0_VAL_ADDRESS 1074184192 /* 0x4006c000 */
#define DT_N_S_soc_S_uart_4006c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_4006c000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_4006c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_4006c000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_4006c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_NAME_status_VAL_irq DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_uart_4006c000_IRQ_NAME_status_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_NAME_status_VAL_priority DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_uart_4006c000_IRQ_NAME_status_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_IRQ_NAME_status_CONTROLLER DT_N_S_soc_S_uart_4006c000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_uart_4006c000_COMPAT_MATCHES_nxp_kinetis_uart 1
#define DT_N_S_soc_S_uart_4006c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_4006c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_COMPAT_MODEL_IDX_0 "kinetis-uart"
#define DT_N_S_soc_S_uart_4006c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_4006c000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_S_pinmux_uart2

/* Generic property macros: */
#define DT_N_S_soc_S_uart_4006c000_P_reg {1074184192 /* 0x4006c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_4006c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_reg_IDX_0 1074184192
#define DT_N_S_soc_S_uart_4006c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_4006c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_interrupts {14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_4006c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_uart_4006c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_4006c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_VAL_offset 4148
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_VAL_bits 12
#define DT_N_S_soc_S_uart_4006c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, clocks, 0)
#define DT_N_S_soc_S_uart_4006c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, clocks, 0)
#define DT_N_S_soc_S_uart_4006c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_S_pinmux_uart2
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_S_pinmux_uart2
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_current_speed 115200
#define DT_N_S_soc_S_uart_4006c000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_4006c000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_parity "none"
#define DT_N_S_soc_S_uart_4006c000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_4006c000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_4006c000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_4006c000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_4006c000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_4006c000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, parity, 0)
#define DT_N_S_soc_S_uart_4006c000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, parity, 0)
#define DT_N_S_soc_S_uart_4006c000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_status "disabled"
#define DT_N_S_soc_S_uart_4006c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_4006c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_4006c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_4006c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_4006c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_4006c000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, status, 0)
#define DT_N_S_soc_S_uart_4006c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, status, 0)
#define DT_N_S_soc_S_uart_4006c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_status_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_compatible {"nxp,kinetis-uart"}
#define DT_N_S_soc_S_uart_4006c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_compatible_IDX_0 "nxp,kinetis-uart"
#define DT_N_S_soc_S_uart_4006c000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-uart
#define DT_N_S_soc_S_uart_4006c000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_uart
#define DT_N_S_soc_S_uart_4006c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_UART
#define DT_N_S_soc_S_uart_4006c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, compatible, 0)
#define DT_N_S_soc_S_uart_4006c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, compatible, 0)
#define DT_N_S_soc_S_uart_4006c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names {"status"}
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_IDX_0 "status"
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_IDX_0_STRING_UNQUOTED status
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_IDX_0_STRING_TOKEN status
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN STATUS
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_4006c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_4006c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_4006c000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4006c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_4006c000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40072000
 *
 * Node identifier: DT_N_S_soc_S_usbd_40072000
 *
 * Binding (compatible = nxp,kinetis-usbd):
 *   $ZEPHYR_BASE\dts\bindings\usb\nxp,kinetis-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40072000_PATH "/soc/usbd@40072000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40072000_FULL_NAME "usbd@40072000"
#define DT_N_S_soc_S_usbd_40072000_FULL_NAME_UNQUOTED usbd@40072000
#define DT_N_S_soc_S_usbd_40072000_FULL_NAME_TOKEN usbd_40072000
#define DT_N_S_soc_S_usbd_40072000_FULL_NAME_UPPER_TOKEN USBD_40072000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_40072000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_40072000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_usbd_40072000_NODELABEL_NUM 2
#define DT_N_S_soc_S_usbd_40072000_FOREACH_NODELABEL(fn) fn(usb) fn(zephyr_udc0)
#define DT_N_S_soc_S_usbd_40072000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb, __VA_ARGS__) fn(zephyr_udc0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_40072000_CHILD_NUM 0
#define DT_N_S_soc_S_usbd_40072000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40072000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_usbd_40072000_HASH 91U0R6uQ3YOzEVd3mCTW_Hvi04pCUlsZdkTFmMrpc54

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40072000_ORD 55
#define DT_N_S_soc_S_usbd_40072000_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40072000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40072000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40072000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_usbd DT_N_S_soc_S_usbd_40072000
#define DT_N_NODELABEL_usb           DT_N_S_soc_S_usbd_40072000
#define DT_N_NODELABEL_zephyr_udc0   DT_N_S_soc_S_usbd_40072000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40072000_REG_NUM 1
#define DT_N_S_soc_S_usbd_40072000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_REG_IDX_0_VAL_ADDRESS 1074208768 /* 0x40072000 */
#define DT_N_S_soc_S_usbd_40072000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usbd_40072000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40072000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40072000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usbd_40072000_IRQ_LEVEL 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_NAME_usb_VAL_irq DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usbd_40072000_IRQ_NAME_usb_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_NAME_usb_VAL_priority DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usbd_40072000_IRQ_NAME_usb_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_IRQ_NAME_usb_CONTROLLER DT_N_S_soc_S_usbd_40072000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_usbd_40072000_COMPAT_MATCHES_nxp_kinetis_usbd 1
#define DT_N_S_soc_S_usbd_40072000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_usbd_40072000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_COMPAT_MODEL_IDX_0 "kinetis-usbd"
#define DT_N_S_soc_S_usbd_40072000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40072000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40072000_P_reg {1074208768 /* 0x40072000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usbd_40072000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_reg_IDX_0 1074208768
#define DT_N_S_soc_S_usbd_40072000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usbd_40072000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_40072000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_usbd_40072000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_no_voltage_regulator 0
#define DT_N_S_soc_S_usbd_40072000_P_no_voltage_regulator_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usbd_40072000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_status "okay"
#define DT_N_S_soc_S_usbd_40072000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usbd_40072000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_40072000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40072000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usbd_40072000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_40072000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40072000, status, 0)
#define DT_N_S_soc_S_usbd_40072000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40072000, status, 0)
#define DT_N_S_soc_S_usbd_40072000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40072000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40072000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_P_status_LEN 1
#define DT_N_S_soc_S_usbd_40072000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_compatible {"nxp,kinetis-usbd"}
#define DT_N_S_soc_S_usbd_40072000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_compatible_IDX_0 "nxp,kinetis-usbd"
#define DT_N_S_soc_S_usbd_40072000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-usbd
#define DT_N_S_soc_S_usbd_40072000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_usbd
#define DT_N_S_soc_S_usbd_40072000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_USBD
#define DT_N_S_soc_S_usbd_40072000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40072000, compatible, 0)
#define DT_N_S_soc_S_usbd_40072000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40072000, compatible, 0)
#define DT_N_S_soc_S_usbd_40072000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40072000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40072000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40072000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names {"usb"}
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_IDX_0 "usb"
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_IDX_0_STRING_UNQUOTED usb
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_IDX_0_STRING_TOKEN usb
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USB
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40072000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40072000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40072000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40072000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usbd_40072000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usbd_40072000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40072000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_40072000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_40072000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40020000
 *
 * Binding (compatible = nxp,kinetis-ftfa):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\nxp,kinetis-ftfa.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40020000_PATH "/soc/flash-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40020000_FULL_NAME "flash-controller@40020000"
#define DT_N_S_soc_S_flash_controller_40020000_FULL_NAME_UNQUOTED flash-controller@40020000
#define DT_N_S_soc_S_flash_controller_40020000_FULL_NAME_TOKEN flash_controller_40020000
#define DT_N_S_soc_S_flash_controller_40020000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_40020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40020000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_NODELABEL(fn) fn(ftfa)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ftfa, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40020000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40020000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40020000_HASH yvPyNy4jXRu2Ln3Path2VBSJ1SG2oE5SFEbgxZ5igEg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40020000_ORD 56
#define DT_N_S_soc_S_flash_controller_40020000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40020000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40020000_SUPPORTS_ORDS \
	57, /* /soc/flash-controller@40020000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40020000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_ftfa DT_N_S_soc_S_flash_controller_40020000
#define DT_N_NODELABEL_ftfa          DT_N_S_soc_S_flash_controller_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_flash_controller_40020000_REG_IDX_0_VAL_SIZE 20 /* 0x14 */
#define DT_N_S_soc_S_flash_controller_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_flash_controller_40020000_IRQ_LEVEL 1
#define DT_N_S_soc_S_flash_controller_40020000_COMPAT_MATCHES_nxp_kinetis_ftfa 1
#define DT_N_S_soc_S_flash_controller_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flash_controller_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_COMPAT_MODEL_IDX_0 "kinetis-ftfa"
#define DT_N_S_soc_S_flash_controller_40020000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40020000_P_fsec 254
#define DT_N_S_soc_S_flash_controller_40020000_P_fsec_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_fopt 61
#define DT_N_S_soc_S_flash_controller_40020000_P_fopt_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_config_field_offset 1024
#define DT_N_S_soc_S_flash_controller_40020000_P_config_field_offset_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 20 /* 0x14 */}
#define DT_N_S_soc_S_flash_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_flash_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_reg_IDX_1 20
#define DT_N_S_soc_S_flash_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_status "disabled"
#define DT_N_S_soc_S_flash_controller_40020000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flash_controller_40020000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flash_controller_40020000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flash_controller_40020000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_flash_controller_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_flash_controller_40020000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40020000, status, 0)
#define DT_N_S_soc_S_flash_controller_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40020000, status, 0)
#define DT_N_S_soc_S_flash_controller_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_P_status_LEN 1
#define DT_N_S_soc_S_flash_controller_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible {"nxp,kinetis-ftfa"}
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_IDX_0 "nxp,kinetis-ftfa"
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-ftfa
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_ftfa
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_FTFA
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_interrupts {5 /* 0x5 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_flash_controller_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40020000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40020000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_PATH "/soc/flash-controller@40020000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc/flash-controller@40020000) identifier: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40020000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_HASH wI3G10YkLNsCTzAZyD18M6xpbiEzuKpKepe33baK3lQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_ORD 57
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_REQUIRES_ORDS \
	56, /* /soc/flash-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40020000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40020000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_erase_block_size 1024
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_reg {0 /* 0x0 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_reg_IDX_1 262144
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40020000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40066000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40066000
 *
 * Binding (compatible = nxp,kinetis-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\nxp,kinetis-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40066000_PATH "/soc/i2c@40066000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40066000_FULL_NAME "i2c@40066000"
#define DT_N_S_soc_S_i2c_40066000_FULL_NAME_UNQUOTED i2c@40066000
#define DT_N_S_soc_S_i2c_40066000_FULL_NAME_TOKEN i2c_40066000
#define DT_N_S_soc_S_i2c_40066000_FULL_NAME_UPPER_TOKEN I2C_40066000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40066000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40066000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40066000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40066000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40066000_CHILD_NUM 1
#define DT_N_S_soc_S_i2c_40066000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40066000_HASH UdlK8vMvs7g6cAhUuT1U_7t2vNkXj4kkvyPU_M5ogNQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40066000_ORD 58
#define DT_N_S_soc_S_i2c_40066000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40066000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */ \
	31, /* /pinctrl/pinmux_i2c0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40066000_SUPPORTS_ORDS \
	59, /* /soc/i2c@40066000/fxls8974@18 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40066000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_i2c DT_N_S_soc_S_i2c_40066000
#define DT_N_NODELABEL_i2c0         DT_N_S_soc_S_i2c_40066000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40066000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40066000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_REG_IDX_0_VAL_ADDRESS 1074159616 /* 0x40066000 */
#define DT_N_S_soc_S_i2c_40066000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40066000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40066000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40066000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40066000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40066000_COMPAT_MATCHES_nxp_kinetis_i2c 1
#define DT_N_S_soc_S_i2c_40066000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40066000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_COMPAT_MODEL_IDX_0 "kinetis-i2c"
#define DT_N_S_soc_S_i2c_40066000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40066000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_S_pinmux_i2c0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40066000_P_reg {1074159616 /* 0x40066000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40066000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_reg_IDX_0 1074159616
#define DT_N_S_soc_S_i2c_40066000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40066000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_interrupts {8 /* 0x8 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40066000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_i2c_40066000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40066000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_S_pinmux_i2c0
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_S_pinmux_i2c0
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40066000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40066000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40066000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_status "okay"
#define DT_N_S_soc_S_i2c_40066000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40066000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40066000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40066000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40066000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40066000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000, status, 0)
#define DT_N_S_soc_S_i2c_40066000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000, status, 0)
#define DT_N_S_soc_S_i2c_40066000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40066000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_compatible {"nxp,kinetis-i2c"}
#define DT_N_S_soc_S_i2c_40066000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_compatible_IDX_0 "nxp,kinetis-i2c"
#define DT_N_S_soc_S_i2c_40066000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-i2c
#define DT_N_S_soc_S_i2c_40066000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_i2c
#define DT_N_S_soc_S_i2c_40066000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_I2C
#define DT_N_S_soc_S_i2c_40066000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000, compatible, 0)
#define DT_N_S_soc_S_i2c_40066000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000, compatible, 0)
#define DT_N_S_soc_S_i2c_40066000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40066000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_VAL_offset 4148
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_VAL_bits 6
#define DT_N_S_soc_S_i2c_40066000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000, clocks, 0)
#define DT_N_S_soc_S_i2c_40066000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000, clocks, 0)
#define DT_N_S_soc_S_i2c_40066000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40066000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40066000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40066000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40066000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40066000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40066000/fxls8974@18
 *
 * Node identifier: DT_N_S_soc_S_i2c_40066000_S_fxls8974_18
 *
 * Binding (compatible = nxp,fxls8974):
 *   $ZEPHYR_BASE\dts\bindings\sensor\nxp,fxls8974-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_PATH "/soc/i2c@40066000/fxls8974@18"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FULL_NAME "fxls8974@18"
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FULL_NAME_UNQUOTED fxls8974@18
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FULL_NAME_TOKEN fxls8974_18
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FULL_NAME_UPPER_TOKEN FXLS8974_18

/* Node parent (/soc/i2c@40066000) identifier: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_PARENT DT_N_S_soc_S_i2c_40066000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_NODELABEL(fn) fn(fxls8974)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_NODELABEL_VARGS(fn, ...) fn(fxls8974, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_40066000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_HASH CPNFhVHF2AUU_wJTNTL0dutoKUsUTtx3E39ctm1013M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_ORD 59
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_REQUIRES_ORDS \
	23, /* /soc/gpio@400ff0c0 */ \
	58, /* /soc/i2c@40066000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_EXISTS 1
#define DT_N_ALIAS_accel0        DT_N_S_soc_S_i2c_40066000_S_fxls8974_18
#define DT_N_INST_0_nxp_fxls8974 DT_N_S_soc_S_i2c_40066000_S_fxls8974_18
#define DT_N_NODELABEL_fxls8974  DT_N_S_soc_S_i2c_40066000_S_fxls8974_18

/* Bus info (controller: '/soc/i2c@40066000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_BUS DT_N_S_soc_S_i2c_40066000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_REG_NUM 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_REG_IDX_0_VAL_ADDRESS 24 /* 0x18 */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_COMPAT_MATCHES_nxp_fxls8974 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_COMPAT_MODEL_IDX_0 "fxls8974"
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_reg {24 /* 0x18 */}
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_reg_IDX_0 24
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status "okay"
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, status, 0)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, status, 0)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible {"nxp,fxls8974"}
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_IDX_0 "nxp,fxls8974"
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_IDX_0_STRING_UNQUOTED nxp,fxls8974
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_IDX_0_STRING_TOKEN nxp_fxls8974
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_FXLS8974
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, compatible, 0)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, compatible, 0)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400ff0c0
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_IDX_0_VAL_pin 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, int1_gpios, 0)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, int1_gpios, 0)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, int1_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, int1_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_int1_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_range 2
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_range_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_range_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_range_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_range_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40066000_S_fxls8974_18_P_range_EXISTS 1

/*
 * Devicetree node: /soc/pit@40037000
 *
 * Node identifier: DT_N_S_soc_S_pit_40037000
 *
 * Binding (compatible = nxp,pit):
 *   $ZEPHYR_BASE\dts\bindings\counter\nxp,pit.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pit_40037000_PATH "/soc/pit@40037000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pit_40037000_FULL_NAME "pit@40037000"
#define DT_N_S_soc_S_pit_40037000_FULL_NAME_UNQUOTED pit@40037000
#define DT_N_S_soc_S_pit_40037000_FULL_NAME_TOKEN pit_40037000
#define DT_N_S_soc_S_pit_40037000_FULL_NAME_UPPER_TOKEN PIT_40037000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pit_40037000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pit_40037000_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pit_40037000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pit_40037000_FOREACH_NODELABEL(fn) fn(pit0)
#define DT_N_S_soc_S_pit_40037000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pit0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pit_40037000_CHILD_NUM 2
#define DT_N_S_soc_S_pit_40037000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pit_40037000_HASH Ik_tWTis7OnaqpPjVxnOQh98Z_eMOfG8HTIYxNTZrnU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pit_40037000_ORD 60
#define DT_N_S_soc_S_pit_40037000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pit_40037000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/sim@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pit_40037000_SUPPORTS_ORDS \
	61, /* /soc/pit@40037000/pit0_channel@0 */ \
	62, /* /soc/pit@40037000/pit0_channel@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pit_40037000_EXISTS 1
#define DT_N_INST_0_nxp_pit DT_N_S_soc_S_pit_40037000
#define DT_N_NODELABEL_pit0 DT_N_S_soc_S_pit_40037000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pit_40037000_REG_NUM 1
#define DT_N_S_soc_S_pit_40037000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_REG_IDX_0_VAL_ADDRESS 1073967104 /* 0x40037000 */
#define DT_N_S_soc_S_pit_40037000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pit_40037000_RANGES_NUM 0
#define DT_N_S_soc_S_pit_40037000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pit_40037000_IRQ_NUM 1
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pit_40037000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pit_40037000_COMPAT_MATCHES_nxp_pit 1
#define DT_N_S_soc_S_pit_40037000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pit_40037000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_COMPAT_MODEL_IDX_0 "pit"
#define DT_N_S_soc_S_pit_40037000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pit_40037000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pit_40037000_P_reg {1073967104 /* 0x40037000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pit_40037000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_reg_IDX_0 1073967104
#define DT_N_S_soc_S_pit_40037000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pit_40037000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_PH DT_N_S_soc_S_sim_40047000
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_VAL_name 2
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_VAL_offset 4156
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_VAL_bits 23
#define DT_N_S_soc_S_pit_40037000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000, clocks, 0)
#define DT_N_S_soc_S_pit_40037000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000, clocks, 0)
#define DT_N_S_soc_S_pit_40037000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_P_clocks_LEN 1
#define DT_N_S_soc_S_pit_40037000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_max_load_value 4294967295
#define DT_N_S_soc_S_pit_40037000_P_max_load_value_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_status "okay"
#define DT_N_S_soc_S_pit_40037000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pit_40037000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pit_40037000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pit_40037000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pit_40037000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_pit_40037000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000, status, 0)
#define DT_N_S_soc_S_pit_40037000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000, status, 0)
#define DT_N_S_soc_S_pit_40037000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_P_status_LEN 1
#define DT_N_S_soc_S_pit_40037000_P_status_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_compatible {"nxp,pit"}
#define DT_N_S_soc_S_pit_40037000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_compatible_IDX_0 "nxp,pit"
#define DT_N_S_soc_S_pit_40037000_P_compatible_IDX_0_STRING_UNQUOTED nxp,pit
#define DT_N_S_soc_S_pit_40037000_P_compatible_IDX_0_STRING_TOKEN nxp_pit
#define DT_N_S_soc_S_pit_40037000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PIT
#define DT_N_S_soc_S_pit_40037000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000, compatible, 0)
#define DT_N_S_soc_S_pit_40037000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000, compatible, 0)
#define DT_N_S_soc_S_pit_40037000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_P_compatible_LEN 1
#define DT_N_S_soc_S_pit_40037000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pit_40037000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_pit_40037000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pit_40037000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pit_40037000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_wakeup_source 0
#define DT_N_S_soc_S_pit_40037000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pit_40037000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pit@40037000/pit0_channel@0
 *
 * Node identifier: DT_N_S_soc_S_pit_40037000_S_pit0_channel_0
 *
 * Binding (compatible = nxp,pit-channel):
 *   $ZEPHYR_BASE\dts\bindings\counter\nxp,pit-channel.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_PATH "/soc/pit@40037000/pit0_channel@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FULL_NAME "pit0_channel@0"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FULL_NAME_UNQUOTED pit0_channel@0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FULL_NAME_TOKEN pit0_channel_0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FULL_NAME_UPPER_TOKEN PIT0_CHANNEL_0

/* Node parent (/soc/pit@40037000) identifier: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_PARENT DT_N_S_soc_S_pit_40037000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_NODELABEL(fn) fn(pit0_channel0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(pit0_channel0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pit_40037000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_CHILD_NUM 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_HASH P5RMshRZrumqOBJZoCceIqk8jnapYSs_lg_bJbhNQ1Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_ORD 61
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_REQUIRES_ORDS \
	60, /* /soc/pit@40037000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_EXISTS 1
#define DT_N_INST_0_nxp_pit_channel  DT_N_S_soc_S_pit_40037000_S_pit0_channel_0
#define DT_N_NODELABEL_pit0_channel0 DT_N_S_soc_S_pit_40037000_S_pit0_channel_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_REG_NUM 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_RANGES_NUM 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_IRQ_NUM 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_COMPAT_MATCHES_nxp_pit_channel 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_COMPAT_MODEL_IDX_0 "pit-channel"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status "okay"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, status, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, status, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_LEN 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_status_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible {"nxp,pit-channel"}
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_IDX_0 "nxp,pit-channel"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_IDX_0_STRING_UNQUOTED nxp,pit-channel
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_IDX_0_STRING_TOKEN nxp_pit_channel
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PIT_CHANNEL
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, compatible, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, compatible, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_LEN 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_wakeup_source 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pit@40037000/pit0_channel@1
 *
 * Node identifier: DT_N_S_soc_S_pit_40037000_S_pit0_channel_1
 *
 * Binding (compatible = nxp,pit-channel):
 *   $ZEPHYR_BASE\dts\bindings\counter\nxp,pit-channel.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_PATH "/soc/pit@40037000/pit0_channel@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FULL_NAME "pit0_channel@1"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FULL_NAME_UNQUOTED pit0_channel@1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FULL_NAME_TOKEN pit0_channel_1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FULL_NAME_UPPER_TOKEN PIT0_CHANNEL_1

/* Node parent (/soc/pit@40037000) identifier: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_PARENT DT_N_S_soc_S_pit_40037000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_NODELABEL_NUM 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_NODELABEL(fn) fn(pit0_channel1)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(pit0_channel1, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pit_40037000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_CHILD_NUM 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_HASH Te59yqSOtapUhH4dLQCVj0lRNjSk9BBd47vZndWcGm0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_ORD 62
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_REQUIRES_ORDS \
	60, /* /soc/pit@40037000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_EXISTS 1
#define DT_N_INST_1_nxp_pit_channel  DT_N_S_soc_S_pit_40037000_S_pit0_channel_1
#define DT_N_NODELABEL_pit0_channel1 DT_N_S_soc_S_pit_40037000_S_pit0_channel_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_REG_NUM 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_RANGES_NUM 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_IRQ_NUM 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_COMPAT_MATCHES_nxp_pit_channel 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_COMPAT_MODEL_IDX_0 "pit-channel"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status "okay"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, status, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, status, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_LEN 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_status_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible {"nxp,pit-channel"}
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_IDX_0 "nxp,pit-channel"
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_IDX_0_STRING_UNQUOTED nxp,pit-channel
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_IDX_0_STRING_TOKEN nxp_pit_channel
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PIT_CHANNEL
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, compatible, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, compatible, 0)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_LEN 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_wakeup_source 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pit_40037000_S_pit0_channel_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock-controller@40064000
 *
 * Node identifier: DT_N_S_soc_S_clock_controller_40064000
 *
 * Binding (compatible = nxp,kinetis-mcg):
 *   $ZEPHYR_BASE\dts\bindings\clock\nxp,kinetis-mcg.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_controller_40064000_PATH "/soc/clock-controller@40064000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_controller_40064000_FULL_NAME "clock-controller@40064000"
#define DT_N_S_soc_S_clock_controller_40064000_FULL_NAME_UNQUOTED clock-controller@40064000
#define DT_N_S_soc_S_clock_controller_40064000_FULL_NAME_TOKEN clock_controller_40064000
#define DT_N_S_soc_S_clock_controller_40064000_FULL_NAME_UPPER_TOKEN CLOCK_CONTROLLER_40064000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_controller_40064000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_controller_40064000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_clock_controller_40064000_NODELABEL_NUM 1
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_NODELABEL(fn) fn(mcg)
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcg, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_controller_40064000_CHILD_NUM 0
#define DT_N_S_soc_S_clock_controller_40064000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_clock_controller_40064000_HASH EgYmg5yguZJb2X0ON96jH0HBpW8artIuRs4Azi_Rc9Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_controller_40064000_ORD 63
#define DT_N_S_soc_S_clock_controller_40064000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_controller_40064000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_controller_40064000_SUPPORTS_ORDS \
	64, /* /soc/sim@40047000/core_clk */ \
	65, /* /soc/sim@40047000/flash_clk */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_controller_40064000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_mcg DT_N_S_soc_S_clock_controller_40064000
#define DT_N_NODELABEL_mcg          DT_N_S_soc_S_clock_controller_40064000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_controller_40064000_REG_NUM 1
#define DT_N_S_soc_S_clock_controller_40064000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_REG_IDX_0_VAL_ADDRESS 1074151424 /* 0x40064000 */
#define DT_N_S_soc_S_clock_controller_40064000_REG_IDX_0_VAL_SIZE 13 /* 0xd */
#define DT_N_S_soc_S_clock_controller_40064000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_controller_40064000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_controller_40064000_IRQ_NUM 0
#define DT_N_S_soc_S_clock_controller_40064000_IRQ_LEVEL 0
#define DT_N_S_soc_S_clock_controller_40064000_COMPAT_MATCHES_nxp_kinetis_mcg 1
#define DT_N_S_soc_S_clock_controller_40064000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_clock_controller_40064000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_COMPAT_MODEL_IDX_0 "kinetis-mcg"
#define DT_N_S_soc_S_clock_controller_40064000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_controller_40064000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_controller_40064000_P_reg {1074151424 /* 0x40064000 */, 13 /* 0xd */}
#define DT_N_S_soc_S_clock_controller_40064000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_reg_IDX_0 1074151424
#define DT_N_S_soc_S_clock_controller_40064000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_reg_IDX_1 13
#define DT_N_S_soc_S_clock_controller_40064000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_fcrdiv 0
#define DT_N_S_soc_S_clock_controller_40064000_P_fcrdiv_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_clock_controller_40064000_P_fcrdiv_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_fcrdiv_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_fcrdiv_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_fcrdiv_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_lircdiv2 0
#define DT_N_S_soc_S_clock_controller_40064000_P_lircdiv2_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_clock_controller_40064000_P_lircdiv2_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_lircdiv2_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_lircdiv2_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_lircdiv2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible {"nxp,kinetis-mcg"}
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_IDX_0 "nxp,kinetis-mcg"
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-mcg
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_mcg
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_MCG
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40064000, compatible, 0)
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40064000, compatible, 0)
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40064000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40064000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_controller_40064000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_clock_controller_40064000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_controller_40064000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40064000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_controller_40064000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sim@40047000/core_clk
 *
 * Node identifier: DT_N_S_soc_S_sim_40047000_S_core_clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_PATH "/soc/sim@40047000/core_clk"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FULL_NAME "core_clk"
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FULL_NAME_UNQUOTED core_clk
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FULL_NAME_TOKEN core_clk
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FULL_NAME_UPPER_TOKEN CORE_CLK

/* Node parent (/soc/sim@40047000) identifier: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_PARENT DT_N_S_soc_S_sim_40047000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_NODELABEL_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sim_40047000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_CHILD_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_HASH OPTlRuGCqB03DodNftTxyhrpkFgdt9osAr6uQ35Oe5E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_ORD 64
#define DT_N_S_soc_S_sim_40047000_S_core_clk_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_REQUIRES_ORDS \
	14, /* /soc/sim@40047000 */ \
	63, /* /soc/clock-controller@40064000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_EXISTS 1
#define DT_N_INST_0_fixed_factor_clock DT_N_S_soc_S_sim_40047000_S_core_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_REG_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_RANGES_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sim_40047000_S_core_clk_IRQ_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_IRQ_LEVEL 0
#define DT_N_S_soc_S_sim_40047000_S_core_clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clock_div 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clock_div_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40064000
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_IDX_0_VAL_name 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, clocks, 0)
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, clocks, 0)
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_LEN 1
#define DT_N_S_soc_S_sim_40047000_S_core_clk_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/sim@40047000/flash_clk
 *
 * Node identifier: DT_N_S_soc_S_sim_40047000_S_flash_clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_PATH "/soc/sim@40047000/flash_clk"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FULL_NAME "flash_clk"
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FULL_NAME_UNQUOTED flash_clk
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FULL_NAME_TOKEN flash_clk
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FULL_NAME_UPPER_TOKEN FLASH_CLK

/* Node parent (/soc/sim@40047000) identifier: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_PARENT DT_N_S_soc_S_sim_40047000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_NODELABEL_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sim_40047000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_CHILD_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_HASH h2cBxO9_sfeZqudfmgOaOx_g6M2A_4_0OQHm7mgvs0w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_ORD 65
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_REQUIRES_ORDS \
	14, /* /soc/sim@40047000 */ \
	63, /* /soc/clock-controller@40064000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_EXISTS 1
#define DT_N_INST_1_fixed_factor_clock DT_N_S_soc_S_sim_40047000_S_flash_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_REG_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_RANGES_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_IRQ_NUM 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_IRQ_LEVEL 0
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clock_div 2
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clock_div_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40064000
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_IDX_0_VAL_name 1
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, clocks, 0)
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, clocks, 0)
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_LEN 1
#define DT_N_S_soc_S_sim_40047000_S_flash_clk_P_clocks_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40020000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_1ffff000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40020000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_40054000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_40054000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40020000) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0) fn(DT_N_S_soc_S_clock_controller_40064000) fn(DT_N_S_soc_S_sim_40047000) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk) fn(DT_N_S_soc_S_pinmux_40049000) fn(DT_N_S_soc_S_pinmux_4004a000) fn(DT_N_S_soc_S_pinmux_4004b000) fn(DT_N_S_soc_S_pinmux_4004c000) fn(DT_N_S_soc_S_pinmux_4004d000) fn(DT_N_S_soc_S_gpio_400ff000) fn(DT_N_S_soc_S_gpio_400ff040) fn(DT_N_S_soc_S_gpio_400ff080) fn(DT_N_S_soc_S_gpio_400ff0c0) fn(DT_N_S_soc_S_gpio_400ff100) fn(DT_N_S_soc_S_adc_4003b000) fn(DT_N_S_soc_S_i2c_40066000) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18) fn(DT_N_S_soc_S_i2c_40067000) fn(DT_N_S_soc_S_usbd_40072000) fn(DT_N_S_soc_S_uart_40054000) fn(DT_N_S_soc_S_uart_40055000) fn(DT_N_S_soc_S_uart_4006c000) fn(DT_N_S_soc_S_pwm_40038000) fn(DT_N_S_soc_S_pwm_40039000) fn(DT_N_S_soc_S_pwm_4003a000) fn(DT_N_S_soc_S_lptmr_40040000) fn(DT_N_S_soc_S_rtc_4003d000) fn(DT_N_S_soc_S_pit_40037000) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_1ffff000) fn(DT_N_S_pinctrl) fn(DT_N_S_pinctrl_S_pinmux_adc0) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0) fn(DT_N_S_pinctrl_S_pinmux_i2c0) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0) fn(DT_N_S_pinctrl_S_pinmux_lpuart0) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0) fn(DT_N_S_pinctrl_S_pinmux_uart2) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0) fn(DT_N_S_pinctrl_S_pinmux_tpm0) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_osc) fn(DT_N_S_temp0) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_pwmleds_S_pwm_led_1) fn(DT_N_S_pwmleds_S_pwm_led_2) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0) fn(DT_N_S_soc_S_clock_controller_40064000) fn(DT_N_S_soc_S_sim_40047000) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk) fn(DT_N_S_soc_S_pinmux_40049000) fn(DT_N_S_soc_S_pinmux_4004a000) fn(DT_N_S_soc_S_pinmux_4004b000) fn(DT_N_S_soc_S_pinmux_4004c000) fn(DT_N_S_soc_S_pinmux_4004d000) fn(DT_N_S_soc_S_gpio_400ff000) fn(DT_N_S_soc_S_gpio_400ff040) fn(DT_N_S_soc_S_gpio_400ff080) fn(DT_N_S_soc_S_gpio_400ff0c0) fn(DT_N_S_soc_S_gpio_400ff100) fn(DT_N_S_soc_S_adc_4003b000) fn(DT_N_S_soc_S_i2c_40066000) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18) fn(DT_N_S_soc_S_usbd_40072000) fn(DT_N_S_soc_S_uart_40054000) fn(DT_N_S_soc_S_pwm_40038000) fn(DT_N_S_soc_S_lptmr_40040000) fn(DT_N_S_soc_S_rtc_4003d000) fn(DT_N_S_soc_S_pit_40037000) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_1ffff000) fn(DT_N_S_pinctrl) fn(DT_N_S_pinctrl_S_pinmux_adc0) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0) fn(DT_N_S_pinctrl_S_pinmux_i2c0) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0) fn(DT_N_S_pinctrl_S_pinmux_lpuart0) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0) fn(DT_N_S_pinctrl_S_pinmux_uart2) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0) fn(DT_N_S_pinctrl_S_pinmux_tpm0) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_osc) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_pwmleds_S_pwm_led_1) fn(DT_N_S_pwmleds_S_pwm_led_2) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40067000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40055000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4006c000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40039000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4003a000, __VA_ARGS__) fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_1ffff000, __VA_ARGS__) fn(DT_N_S_pinctrl, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_adc0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_i2c0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_lpuart0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_uart2, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_tpm0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_osc, __VA_ARGS__) fn(DT_N_S_temp0, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_2, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__) fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_1ffff000, __VA_ARGS__) fn(DT_N_S_pinctrl, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_adc0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_adc0_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_i2c0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_i2c0_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_lpuart0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_lpuart0_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_uart2, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_uart2_S_group0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_tpm0, __VA_ARGS__) fn(DT_N_S_pinctrl_S_pinmux_tpm0_S_group0, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_osc, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_2, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nxp_mcxc444 1
#define DT_COMPAT_HAS_OKAY_nxp_mcx 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v6m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv6m_systick 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_mcg 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_sim 1
#define DT_COMPAT_HAS_OKAY_fixed_factor_clock 1
#define DT_COMPAT_HAS_OKAY_nxp_port_pinmux 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_gpio 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_adc16 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_i2c 1
#define DT_COMPAT_HAS_OKAY_nxp_fxls8974 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_usbd 1
#define DT_COMPAT_HAS_OKAY_nxp_lpuart 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_tpm 1
#define DT_COMPAT_HAS_OKAY_nxp_lptmr 1
#define DT_COMPAT_HAS_OKAY_nxp_rtc 1
#define DT_COMPAT_HAS_OKAY_nxp_pit 1
#define DT_COMPAT_HAS_OKAY_nxp_pit_channel 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m0_ 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nxp_port_pinctrl 1
#define DT_COMPAT_HAS_OKAY_nxp_mcxc_osc 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nxp_mcxc444_NUM_OKAY 1
#define DT_N_INST_nxp_mcx_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v6m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv6m_systick_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_mcg_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_sim_NUM_OKAY 1
#define DT_N_INST_fixed_factor_clock_NUM_OKAY 2
#define DT_N_INST_nxp_port_pinmux_NUM_OKAY 5
#define DT_N_INST_nxp_kinetis_gpio_NUM_OKAY 5
#define DT_N_INST_nxp_kinetis_adc16_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_i2c_NUM_OKAY 1
#define DT_N_INST_nxp_fxls8974_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_usbd_NUM_OKAY 1
#define DT_N_INST_nxp_lpuart_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_tpm_NUM_OKAY 1
#define DT_N_INST_nxp_lptmr_NUM_OKAY 1
#define DT_N_INST_nxp_rtc_NUM_OKAY 1
#define DT_N_INST_nxp_pit_NUM_OKAY 1
#define DT_N_INST_nxp_pit_channel_NUM_OKAY 2
#define DT_N_INST_arm_cortex_m0__NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nxp_port_pinctrl_NUM_OKAY 1
#define DT_N_INST_nxp_mcxc_osc_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_nxp_mcxc444(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nxp_mcxc444(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcxc444(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcxc444(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcx(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nxp_mcx(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcx(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcx(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v6m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v6m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v6m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v6m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv6m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv6m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv6m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv6m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40020000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_mcg(fn) fn(DT_N_S_soc_S_clock_controller_40064000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_mcg(fn, ...) fn(DT_N_S_soc_S_clock_controller_40064000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_mcg(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_mcg(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_sim(fn) fn(DT_N_S_soc_S_sim_40047000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_sim(fn, ...) fn(DT_N_S_soc_S_sim_40047000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_sim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_sim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_factor_clock(fn) fn(DT_N_S_soc_S_sim_40047000_S_core_clk) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk)
#define DT_FOREACH_OKAY_VARGS_fixed_factor_clock(fn, ...) fn(DT_N_S_soc_S_sim_40047000_S_core_clk, __VA_ARGS__) fn(DT_N_S_soc_S_sim_40047000_S_flash_clk, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_factor_clock(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_factor_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_port_pinmux(fn) fn(DT_N_S_soc_S_pinmux_40049000) fn(DT_N_S_soc_S_pinmux_4004a000) fn(DT_N_S_soc_S_pinmux_4004b000) fn(DT_N_S_soc_S_pinmux_4004c000) fn(DT_N_S_soc_S_pinmux_4004d000)
#define DT_FOREACH_OKAY_VARGS_nxp_port_pinmux(fn, ...) fn(DT_N_S_soc_S_pinmux_40049000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004a000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004b000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_4004d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_port_pinmux(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_port_pinmux(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_gpio(fn) fn(DT_N_S_soc_S_gpio_400ff000) fn(DT_N_S_soc_S_gpio_400ff040) fn(DT_N_S_soc_S_gpio_400ff080) fn(DT_N_S_soc_S_gpio_400ff0c0) fn(DT_N_S_soc_S_gpio_400ff100)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_400ff000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff0c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400ff100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_adc16(fn) fn(DT_N_S_soc_S_adc_4003b000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_adc16(fn, ...) fn(DT_N_S_soc_S_adc_4003b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_adc16(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_adc16(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_i2c(fn) fn(DT_N_S_soc_S_i2c_40066000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40066000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_fxls8974(fn) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18)
#define DT_FOREACH_OKAY_VARGS_nxp_fxls8974(fn, ...) fn(DT_N_S_soc_S_i2c_40066000_S_fxls8974_18, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_fxls8974(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_fxls8974(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_usbd(fn) fn(DT_N_S_soc_S_usbd_40072000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_40072000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lpuart(fn) fn(DT_N_S_soc_S_uart_40054000)
#define DT_FOREACH_OKAY_VARGS_nxp_lpuart(fn, ...) fn(DT_N_S_soc_S_uart_40054000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lpuart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lpuart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_tpm(fn) fn(DT_N_S_soc_S_pwm_40038000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_tpm(fn, ...) fn(DT_N_S_soc_S_pwm_40038000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_tpm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_tpm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_lptmr(fn) fn(DT_N_S_soc_S_lptmr_40040000)
#define DT_FOREACH_OKAY_VARGS_nxp_lptmr(fn, ...) fn(DT_N_S_soc_S_lptmr_40040000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_lptmr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_lptmr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_rtc(fn) fn(DT_N_S_soc_S_rtc_4003d000)
#define DT_FOREACH_OKAY_VARGS_nxp_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_4003d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_pit(fn) fn(DT_N_S_soc_S_pit_40037000)
#define DT_FOREACH_OKAY_VARGS_nxp_pit(fn, ...) fn(DT_N_S_soc_S_pit_40037000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_pit(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_pit(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_pit_channel(fn) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1)
#define DT_FOREACH_OKAY_VARGS_nxp_pit_channel(fn, ...) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_pit_40037000_S_pit0_channel_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_pit_channel(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_pit_channel(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m0_(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m0_(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m0_(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m0_(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_1ffff000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_1ffff000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_port_pinctrl(fn) fn(DT_N_S_pinctrl)
#define DT_FOREACH_OKAY_VARGS_nxp_port_pinctrl(fn, ...) fn(DT_N_S_pinctrl, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_port_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_port_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcxc_osc(fn) fn(DT_N_S_clocks_S_osc)
#define DT_FOREACH_OKAY_VARGS_nxp_mcxc_osc(fn, ...) fn(DT_N_S_clocks_S_osc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcxc_osc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcxc_osc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_nxp_fxls8974_BUS_i2c 1
